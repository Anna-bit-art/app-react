{"ast":null,"code":"import { UsersApi } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nlet initialState = {\n  posts: [{\n    id: 'p1',\n    likesCount: 12,\n    text: \"Oh, I was not made for heaven. No, I don't want to go to heaven. Hell is much better. Think of all the interesting people you're going to meet down there!\"\n  }, {\n    id: 'p2',\n    likesCount: 3,\n    text: \"The reason we're successful, darling? My overall charisma, of course.\"\n  }, {\n    id: 'p3',\n    likesCount: 72,\n    text: \"I am a romantic, but I do put up a barrier around myself, so it is hard for people to get in and to know the real me.\"\n  }],\n  newPostText: '',\n  profile: null\n};\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = state.newPostText;\n        return { ...state,\n          posts: [{\n            id: 'p4',\n            likesCount: 0,\n            text: newPost\n          }, ...state.posts],\n          newPostText: ''\n        };\n      }\n\n    case UPDATE_NEW_POST_TEXT:\n      {\n        return { ...state,\n          newPostText: action.newText\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const profileUser = userId => {\n  return dispatch => {\n    UsersApi.profile(userId).then(data => {\n      dispatch(setUserProfile(data));\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/redux/profileReducer.js"],"names":["UsersApi","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","initialState","posts","id","likesCount","text","newPostText","profile","profileReducer","state","action","type","newPost","newText","addPostActionCreator","updateNewPostActionCreator","setUserProfile","profileUser","userId","dispatch","then","data"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,YAAvB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AAEA,IAAIC,YAAY,GAAG;AACXC,EAAAA,KAAK,EAAE,CACH;AACIC,IAAAA,EAAE,EAAE,IADR;AAEIC,IAAAA,UAAU,EAAE,EAFhB;AAGIC,IAAAA,IAAI,EAAE;AAHV,GADG,EAMH;AACIF,IAAAA,EAAE,EAAE,IADR;AAEIC,IAAAA,UAAU,EAAE,CAFhB;AAGIC,IAAAA,IAAI,EAAE;AAHV,GANG,EAWH;AACIF,IAAAA,EAAE,EAAE,IADR;AAEIC,IAAAA,UAAU,EAAE,EAFhB;AAGIC,IAAAA,IAAI,EAAE;AAHV,GAXG,CADI;AAkBXC,EAAAA,WAAW,EAAE,EAlBF;AAmBXC,EAAAA,OAAO,EAAE;AAnBE,CAAnB;;AAqBA,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,QAAL;AAAe;AACX,YAAIc,OAAO,GAAGH,KAAK,CAACH,WAApB;AACA,eAAO,EACH,GAAGG,KADA;AAEHP,UAAAA,KAAK,EAAE,CAAC;AAACC,YAAAA,EAAE,EAAE,IAAL;AAAWC,YAAAA,UAAU,EAAE,CAAvB;AAA0BC,YAAAA,IAAI,EAAEO;AAAhC,WAAD,EAA2C,GAAGH,KAAK,CAACP,KAApD,CAFJ;AAGHI,UAAAA,WAAW,EAAE;AAHV,SAAP;AAKH;;AACD,SAAKP,oBAAL;AAA4B;AACxB,eAAO,EACH,GAAGU,KADA;AAEHH,UAAAA,WAAW,EAAEI,MAAM,CAACG;AAFjB,SAAP;AAIH;;AACD,SAAKb,gBAAL;AAAwB;AACpB,eAAO,EAAE,GAAGS,KAAL;AAAYF,UAAAA,OAAO,EAAEG,MAAM,CAACH;AAA5B,SAAP;AACH;;AAED;AACI,aAAOE,KAAP;AApBR;AAsBH,CAvBD;;AAyBA,OAAO,MAAMK,oBAAoB,GAAG,OAAO;AAACH,EAAAA,IAAI,EAAEb;AAAP,CAAP,CAA7B;AACP,OAAO,MAAMiB,0BAA0B,GAAIV,IAAD,KAAW;AAACM,EAAAA,IAAI,EAAEZ,oBAAP;AAA6Bc,EAAAA,OAAO,EAAER;AAAtC,CAAX,CAAnC;AACP,OAAO,MAAMW,cAAc,GAAIT,OAAD,KAAc;AAACI,EAAAA,IAAI,EAAEX,gBAAP;AAAyBO,EAAAA;AAAzB,CAAd,CAAvB;AAEP,OAAO,MAAMU,WAAW,GAAIC,MAAD,IAAY;AACnC,SAAQC,QAAD,IAAc;AACjBtB,IAAAA,QAAQ,CAACU,OAAT,CAAiBW,MAAjB,EACKE,IADL,CACUC,IAAI,IAAI;AACVF,MAAAA,QAAQ,CAAEH,cAAc,CAACK,IAAD,CAAhB,CAAR;AACH,KAHL;AAIH,GALD;AAMH,CAPM;AASP,eAAeb,cAAf","sourcesContent":["import {UsersApi} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\n\nlet initialState = {\n        posts: [\n            {\n                id: 'p1',\n                likesCount: 12,\n                text: \"Oh, I was not made for heaven. No, I don't want to go to heaven. Hell is much better. Think of all the interesting people you're going to meet down there!\"\n            },\n            {\n                id: 'p2',\n                likesCount: 3,\n                text: \"The reason we're successful, darling? My overall charisma, of course.\"\n            },\n            {\n                id: 'p3',\n                likesCount: 72,\n                text: \"I am a romantic, but I do put up a barrier around myself, so it is hard for people to get in and to know the real me.\"\n            }\n        ],\n        newPostText: '',\n        profile: null\n}\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = state.newPostText;\n            return {\n                ...state,\n                posts: [{id: 'p4', likesCount: 0, text: newPost}, ...state.posts],\n                newPostText: ''\n            }\n        }\n        case UPDATE_NEW_POST_TEXT : {\n            return {\n                ...state,\n                newPostText: action.newText\n            }\n        }\n        case SET_USER_PROFILE : {\n            return { ...state, profile: action.profile}\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport const addPostActionCreator = () => ({type: ADD_POST});\nexport const updateNewPostActionCreator = (text) => ({type: UPDATE_NEW_POST_TEXT, newText: text });\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\n\nexport const profileUser = (userId) => {\n    return (dispatch) => {\n        UsersApi.profile(userId)\n            .then(data => {\n                dispatch (setUserProfile(data));\n            })\n    }\n}\n\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}