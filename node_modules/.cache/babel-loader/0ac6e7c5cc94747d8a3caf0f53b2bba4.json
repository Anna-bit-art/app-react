{"ast":null,"code":"var _jsxFileName = \"/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/components/Profile/ProfileContainer.jsx\";\nimport React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { profileUser } from \"../../redux/profileReducer\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfileClass extends React.Component {\n  componentDidMount() {\n    let userId = this.props.router.params.userId;\n\n    if (!userId) {\n      userId = 2;\n    }\n\n    this.props.profileUser(userId);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n        profile: this.props.profile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction withRouter(Component) {\n  var _s = $RefreshSig$();\n\n  function ComponentWithRouterProps(props) {\n    _s();\n\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return /*#__PURE__*/_jsxDEV(Component, { ...props,\n      router: {\n        location,\n        navigate,\n        params\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n  _s(ComponentWithRouterProps, \"G4H0N746j5KwtpeOKQjfXhEbWfg=\", false, function () {\n    return [useLocation, useNavigate, useParams];\n  });\n\n  return ComponentWithRouterProps;\n}\n\nlet mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile\n  };\n};\n\nconst ProfileContainer = connect(mapStateToProps, {\n  profileUser\n})(withRouter(ProfileClass));\nexport default ProfileContainer;","map":{"version":3,"sources":["/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","connect","profileUser","useLocation","useNavigate","useParams","ProfileClass","Component","componentDidMount","userId","props","router","params","render","profile","withRouter","ComponentWithRouterProps","location","navigate","mapStateToProps","state","profilePage","ProfileContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,4BAA1B;AACA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,SAAlC,QAAkD,kBAAlD;;;AAGA,MAAOC,YAAP,SAA4BP,KAAK,CAACQ,SAAlC,CAA4C;AACxCC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,MAAlB,CAAyBH,MAAtC;;AACA,QAAG,CAACA,MAAJ,EAAW;AACPA,MAAAA,MAAM,GAAG,CAAT;AACH;;AACD,SAAKC,KAAL,CAAWR,WAAX,CAAuBO,MAAvB;AACH;;AACDI,EAAAA,MAAM,GAAI;AACN,wBACI;AAAA,6BACI,QAAC,OAAD,OAAa,KAAKH,KAAlB;AAAyB,QAAA,OAAO,EAAE,KAAKA,KAAL,CAAWI;AAA7C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAduC;;AAiB3C,SAASC,UAAT,CAAoBR,SAApB,EAA8B;AAAA;;AAC3B,WAASS,wBAAT,CAAkCN,KAAlC,EAAwC;AAAA;;AACpC,QAAIO,QAAQ,GAAGd,WAAW,EAA1B;AACA,QAAIe,QAAQ,GAAGd,WAAW,EAA1B;AACA,QAAIQ,MAAM,GAAGP,SAAS,EAAtB;AACA,wBACI,QAAC,SAAD,OAAeK,KAAf;AAAsB,MAAA,MAAM,EAAE;AAACO,QAAAA,QAAD;AAAUC,QAAAA,QAAV;AAAmBN,QAAAA;AAAnB;AAA9B;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAR0B,KAClBI,wBADkB;AAAA,YAERb,WAFQ,EAGRC,WAHQ,EAIVC,SAJU;AAAA;;AAS3B,SAAOW,wBAAP;AACF;;AACD,IAAIG,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHN,IAAAA,OAAO,EAAEM,KAAK,CAACC,WAAN,CAAkBP;AADxB,GAAP;AAGH,CAJD;;AAKD,MAAMQ,gBAAgB,GAAGrB,OAAO,CAAEkB,eAAF,EAAmB;AAACjB,EAAAA;AAAD,CAAnB,CAAP,CAA0Ca,UAAU,CAACT,YAAD,CAApD,CAAzB;AACA,eAAegB,gBAAf","sourcesContent":["import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {profileUser} from \"../../redux/profileReducer\";\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\n\n\nclass  ProfileClass extends React.Component {\n    componentDidMount() {\n        let userId = this.props.router.params.userId;\n        if(!userId){\n            userId = 2;\n        }\n        this.props.profileUser(userId);\n    }\n    render () {\n        return (\n            <div>\n                <Profile {...this.props} profile={this.props.profile} />\n            </div>\n        )\n    }\n}\n\n function withRouter(Component){\n    function ComponentWithRouterProps(props){\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return(\n            <Component {...props} router={{location,navigate,params}} />\n        );\n    }\n    return ComponentWithRouterProps;\n }\n let mapStateToProps = (state) => {\n     return {\n         profile: state.profilePage.profile\n     }\n }\nconst ProfileContainer = connect (mapStateToProps, {profileUser}) (withRouter(ProfileClass));\nexport default ProfileContainer;"]},"metadata":{},"sourceType":"module"}