{"ast":null,"code":"var _jsxFileName = \"/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/components/Users/UsersContainer.jsx\";\nimport { connect } from \"react-redux\";\nimport { deleteUser, following, followingInProgress, followUsers, getUsers, getUsersThunkCreator, remove, setCurrentPage, setTotalUsersCount, setUsers, toggleInProgress, toggleIsFetching } from \"../../redux/usersReducer\";\nimport React from \"react\";\nimport UsersFunctional from \"./UsersFunctional\";\nimport Preloader from \"../common/preloader/preloader\";\nimport { UsersApi } from \"../../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersClass extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageChange = pageNumber => {\n      this.props.getUsers(this.props.pageSize, pageNumber);\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 39\n        }, this) : null, /*#__PURE__*/_jsxDEV(UsersFunctional, {\n          totalUsersCount: this.props.totalUsersCount,\n          pageSize: this.props.pageSize,\n          currentPage: this.props.currentPage,\n          onPageChange: this.onPageChange,\n          users: this.props.users,\n          following: this.props.following,\n          remove: this.props.remove,\n          followingInProgress: this.props.followingInProgress,\n          toggleInProgress: this.props.toggleInProgress,\n          deleteUser: this.props.deleteUser,\n          followUsers: this.props.followUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsers(this.props.pageSize, this.props.currentPage); // this.props.toggleIsFetching(true);\n    // UsersApi.getUsers(this.props.pageSize, this.props.currentPage)\n    //     .then(data => {\n    //         this.props.toggleIsFetching(false);\n    //         this.props.setUsers(data.items);\n    //         // this.props.setTotalUsersCount(response.data.totalCount);-\n    //     })\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n};\n\nconst UsersContainer = connect(mapStateToProps, {\n  following,\n  remove,\n  toggleInProgress,\n  getUsers,\n  deleteUser,\n  followUsers\n})(UsersClass);\nexport default UsersContainer; // let mapDispatchToProps = (dispatch) => {\n//     return {\n//         following: (userId) => {dispatch(followingAC(userId))},\n//         remove: (userId) => {dispatch(removeAC(userId))},\n//         setUsers: (users) => {dispatch(setUsersAC(users))},\n//         setCurrentPage: (pageNumber) => {dispatch(setCurrentPageAC(pageNumber))},\n//         setTotalUsersCount: (totalCount) => {dispatch(setTotalUsersCountAC(totalCount))},\n//         toggleIsFetching: (isFetching) => {dispatch(toggleIsFetchingAC(isFetching))}\n//     }\n// }","map":{"version":3,"sources":["/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/components/Users/UsersContainer.jsx"],"names":["connect","deleteUser","following","followingInProgress","followUsers","getUsers","getUsersThunkCreator","remove","setCurrentPage","setTotalUsersCount","setUsers","toggleInProgress","toggleIsFetching","React","UsersFunctional","Preloader","UsersApi","UsersClass","Component","onPageChange","pageNumber","props","pageSize","render","isFetching","totalUsersCount","currentPage","users","componentDidMount","mapStateToProps","state","usersPage","UsersContainer"],"mappings":";AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,SACIC,UADJ,EAEIC,SAFJ,EAGIC,mBAHJ,EAGyBC,WAHzB,EAGsCC,QAHtC,EAGgDC,oBAHhD,EAIIC,MAJJ,EAKIC,cALJ,EAMIC,kBANJ,EAOIC,QAPJ,EAOcC,gBAPd,EAQIC,gBARJ,QASO,0BATP;AAUA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAAQC,QAAR,QAAuB,eAAvB;;;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAWrCC,YAXqC,GAWrBC,UAAD,IAAgB;AAC3B,WAAKC,KAAL,CAAWhB,QAAX,CAAoB,KAAKgB,KAAL,CAAWC,QAA/B,EAAyCF,UAAzC;AACH,KAboC;;AAAA,SAcrCG,MAdqC,GAc5B,MAAM;AACX,0BAAO;AAAA,mBACD,KAAKF,KAAL,CAAWG,UAAX,gBAAwB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAAxB,GAAwC,IADvC,eAEH,QAAC,eAAD;AAAiB,UAAA,eAAe,EAAE,KAAKH,KAAL,CAAWI,eAA7C;AACiB,UAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWC,QADtC;AAEiB,UAAA,WAAW,EAAE,KAAKD,KAAL,CAAWK,WAFzC;AAGiB,UAAA,YAAY,EAAE,KAAKP,YAHpC;AAIiB,UAAA,KAAK,EAAE,KAAKE,KAAL,CAAWM,KAJnC;AAKiB,UAAA,SAAS,EAAE,KAAKN,KAAL,CAAWnB,SALvC;AAMiB,UAAA,MAAM,EAAE,KAAKmB,KAAL,CAAWd,MANpC;AAOiB,UAAA,mBAAmB,EAAE,KAAKc,KAAL,CAAWlB,mBAPjD;AAQiB,UAAA,gBAAgB,EAAE,KAAKkB,KAAL,CAAWV,gBAR9C;AASiB,UAAA,UAAU,EAAE,KAAKU,KAAL,CAAWpB,UATxC;AAUiB,UAAA,WAAW,EAAE,KAAKoB,KAAL,CAAWjB;AAVzC;AAAA;AAAA;AAAA;AAAA,gBAFG;AAAA,sBAAP;AAcH,KA7BoC;AAAA;;AACrCwB,EAAAA,iBAAiB,GAAG;AAChB,SAAKP,KAAL,CAAWhB,QAAX,CAAoB,KAAKgB,KAAL,CAAWC,QAA/B,EAAyC,KAAKD,KAAL,CAAWK,WAApD,EADgB,CAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAVoC;;AAgCzC,IAAIG,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHH,IAAAA,KAAK,EAAEG,KAAK,CAACC,SAAN,CAAgBJ,KADpB;AAEHL,IAAAA,QAAQ,EAAEQ,KAAK,CAACC,SAAN,CAAgBT,QAFvB;AAGHG,IAAAA,eAAe,EAAEK,KAAK,CAACC,SAAN,CAAgBN,eAH9B;AAIHC,IAAAA,WAAW,EAAEI,KAAK,CAACC,SAAN,CAAgBL,WAJ1B;AAKHF,IAAAA,UAAU,EAAEM,KAAK,CAACC,SAAN,CAAgBP,UALzB;AAMHrB,IAAAA,mBAAmB,EAAE2B,KAAK,CAACC,SAAN,CAAgB5B;AANlC,GAAP;AAQH,CATD;;AAWA,MAAM6B,cAAc,GAAGhC,OAAO,CAAC6B,eAAD,EAC1B;AACI3B,EAAAA,SADJ;AACeK,EAAAA,MADf;AAEII,EAAAA,gBAFJ;AAEsBN,EAAAA,QAFtB;AAEgCJ,EAAAA,UAFhC;AAE4CG,EAAAA;AAF5C,CAD0B,CAAP,CAKtBa,UALsB,CAAvB;AAOA,eAAee,cAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {connect} from \"react-redux\";\nimport {\n    deleteUser,\n    following,\n    followingInProgress, followUsers, getUsers, getUsersThunkCreator,\n    remove,\n    setCurrentPage,\n    setTotalUsersCount,\n    setUsers, toggleInProgress,\n    toggleIsFetching\n} from \"../../redux/usersReducer\";\nimport React from \"react\";\nimport UsersFunctional from \"./UsersFunctional\";\nimport Preloader from \"../common/preloader/preloader\";\nimport {UsersApi} from \"../../api/api\";\n\nclass UsersClass extends React.Component {\n    componentDidMount() {\n        this.props.getUsers(this.props.pageSize, this.props.currentPage);\n        // this.props.toggleIsFetching(true);\n        // UsersApi.getUsers(this.props.pageSize, this.props.currentPage)\n        //     .then(data => {\n        //         this.props.toggleIsFetching(false);\n        //         this.props.setUsers(data.items);\n        //         // this.props.setTotalUsersCount(response.data.totalCount);-\n        //     })\n    }\n    onPageChange = (pageNumber) => {\n        this.props.getUsers(this.props.pageSize, pageNumber);\n    }\n    render = () => {\n        return <>\n            { this.props.isFetching ? <Preloader /> : null }\n            <UsersFunctional totalUsersCount={this.props.totalUsersCount}\n                             pageSize={this.props.pageSize}\n                             currentPage={this.props.currentPage}\n                             onPageChange={this.onPageChange}\n                             users={this.props.users}\n                             following={this.props.following}\n                             remove={this.props.remove}\n                             followingInProgress={this.props.followingInProgress}\n                             toggleInProgress={this.props.toggleInProgress}\n                             deleteUser={this.props.deleteUser}\n                             followUsers={this.props.followUsers}/>\n            </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}\n\nconst UsersContainer = connect(mapStateToProps,\n    {\n        following, remove,\n        toggleInProgress, getUsers, deleteUser, followUsers\n    })\n(UsersClass);\n\nexport default UsersContainer;\n\n// let mapDispatchToProps = (dispatch) => {\n//     return {\n//         following: (userId) => {dispatch(followingAC(userId))},\n//         remove: (userId) => {dispatch(removeAC(userId))},\n//         setUsers: (users) => {dispatch(setUsersAC(users))},\n//         setCurrentPage: (pageNumber) => {dispatch(setCurrentPageAC(pageNumber))},\n//         setTotalUsersCount: (totalCount) => {dispatch(setTotalUsersCountAC(totalCount))},\n//         toggleIsFetching: (isFetching) => {dispatch(toggleIsFetchingAC(isFetching))}\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}