{"ast":null,"code":"import { authAPI } from \"../api/api\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nconst SET_PHOTO = 'SET_PHOTO';\nlet initialState = {\n  id: null,\n  photo: null,\n  email: null,\n  login: null,\n  isAuth: false,\n  isFetching: false\n};\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER_DATA:\n      return { ...state,\n        ...action.data,\n        isAuth: true\n      };\n\n    case SET_PHOTO:\n      return { ...state,\n        photo: action.photo\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (id, email, login) => ({\n  type: SET_USER_DATA,\n  data: {\n    id,\n    email,\n    login\n  }\n});\nexport const setAuthPhoto = photo => ({\n  type: SET_PHOTO,\n  photo\n});\nexport const authMe = () => {\n  return dispatch => {\n    authAPI.me().then(data => {\n      if (data.resultCode === 0) {\n        dispatch(setAuthUserData(data.data.id, data.data.email, data.data.login));\n      }\n    });\n  };\n};\nexport const myPhoto = photo => {\n  return dispatch => {\n    authAPI.myPhoto().then(response => {\n      if (response.data.resultCode === 0) {\n        dispatch(setAuthPhoto(photo));\n      }\n    });\n  };\n};\nexport default authReducer;","map":{"version":3,"sources":["/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/redux/authReducer.js"],"names":["authAPI","SET_USER_DATA","SET_PHOTO","initialState","id","photo","email","login","isAuth","isFetching","authReducer","state","action","type","data","setAuthUserData","setAuthPhoto","authMe","dispatch","me","then","resultCode","myPhoto","response"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,YAAtB;AAEA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,SAAS,GAAG,WAAlB;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,EAAE,EAAE,IADW;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,KAAK,EAAE,IAJQ;AAKfC,EAAAA,MAAM,EAAE,KALO;AAMfC,EAAAA,UAAU,EAAE;AANG,CAAnB;;AASA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,aAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEH,WAAGC,MAAM,CAACE,IAFP;AAGHN,QAAAA,MAAM,EAAE;AAHL,OAAP;;AAKJ,SAAKN,SAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHN,QAAAA,KAAK,EAAEO,MAAM,CAACP;AAFX,OAAP;;AAIJ;AACI,aAAOM,KAAP;AAbR;AAeH,CAhBD;;AAkBA,OAAO,MAAMI,eAAe,GAAG,CAACX,EAAD,EAAKE,KAAL,EAAYC,KAAZ,MAAuB;AAACM,EAAAA,IAAI,EAACZ,aAAN;AAAqBa,EAAAA,IAAI,EAAC;AAACV,IAAAA,EAAD;AAAKE,IAAAA,KAAL;AAAYC,IAAAA;AAAZ;AAA1B,CAAvB,CAAxB;AACP,OAAO,MAAMS,YAAY,GAAIX,KAAD,KAAY;AAACQ,EAAAA,IAAI,EAAEX,SAAP;AAAkBG,EAAAA;AAAlB,CAAZ,CAArB;AAEP,OAAO,MAAMY,MAAM,GAAG,MAAM;AACxB,SAAQC,QAAD,IAAc;AACjBlB,IAAAA,OAAO,CAACmB,EAAR,GACKC,IADL,CACUN,IAAI,IAAI;AACV,UAAIA,IAAI,CAACO,UAAL,KAAoB,CAAxB,EAA2B;AACvBH,QAAAA,QAAQ,CAACH,eAAe,CAACD,IAAI,CAACA,IAAL,CAAUV,EAAX,EAAeU,IAAI,CAACA,IAAL,CAAUR,KAAzB,EAAgCQ,IAAI,CAACA,IAAL,CAAUP,KAA1C,CAAhB,CAAR;AACH;AACJ,KALL;AAMH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMe,OAAO,GAAIjB,KAAD,IAAW;AAC9B,SAAQa,QAAD,IAAc;AACjBlB,IAAAA,OAAO,CAACsB,OAAR,GACKF,IADL,CACUG,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACT,IAAT,CAAcO,UAAd,KAA6B,CAAjC,EAAoC;AAChCH,QAAAA,QAAQ,CAACF,YAAY,CAACX,KAAD,CAAb,CAAR;AACH;AACJ,KALL;AAMH,GAPD;AAQH,CATM;AAYP,eAAeK,WAAf","sourcesContent":["import {authAPI} from \"../api/api\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\nconst SET_PHOTO = 'SET_PHOTO';\n\n\nlet initialState = {\n    id: null,\n    photo: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    isFetching: false\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.data,\n                isAuth: true\n            }\n        case SET_PHOTO:\n            return {\n                ...state,\n                photo: action.photo\n            }\n        default:\n            return state;\n    }\n}\n\nexport const setAuthUserData = (id, email, login) => ({type:SET_USER_DATA, data:{id, email, login}});\nexport const setAuthPhoto = (photo) => ({type: SET_PHOTO, photo});\n\nexport const authMe = () => {\n    return (dispatch) => {\n        authAPI.me()\n            .then(data => {\n                if (data.resultCode === 0) {\n                    dispatch(setAuthUserData(data.data.id, data.data.email, data.data.login))\n                }\n            })\n    }\n}\n\nexport const myPhoto = (photo) => {\n    return (dispatch) => {\n        authAPI.myPhoto()\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(setAuthPhoto(photo))\n                }\n            })\n    }\n}\n\n\nexport default authReducer;\n\n"]},"metadata":{},"sourceType":"module"}