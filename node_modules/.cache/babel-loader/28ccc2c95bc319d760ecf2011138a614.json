{"ast":null,"code":"var _jsxFileName = \"/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/components/Users/UsersContainer.jsx\";\nimport { connect } from \"react-redux\";\nimport { followingAC, removeAC, setCurrentPageAC, setTotalUsersCountAC, setUsersAC } from \"../redux/usersReducer\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport UsersFunctional from \"./UsersFunctional\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersClass extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageChange = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?count=${this.props.pageSize}&page=${this.props.currentPage}`).then(response => {\n        this.props.setUsers(response.data.items);\n      });\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(\"img\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 39\n        }, this) : null, /*#__PURE__*/_jsxDEV(UsersFunctional, {\n          totalUsersCount: this.props.totalUsersCount,\n          pageSize: this.props.pageSize,\n          currentPage: this.props.currentPage,\n          onPageChange: this.onPageChange,\n          users: this.props.users,\n          following: this.props.following,\n          remove: this.props.remove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?count=${this.props.pageSize}&page=${this.props.currentPage}`).then(response => {\n      this.props.setUsers(response.data.items); // this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    following: userId => {\n      dispatch(followingAC(userId));\n    },\n    remove: userId => {\n      dispatch(removeAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setTotalUsersCountAC(totalCount));\n    }\n  };\n};\n\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersClass);\nexport default UsersContainer;","map":{"version":3,"sources":["/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/components/Users/UsersContainer.jsx"],"names":["connect","followingAC","removeAC","setCurrentPageAC","setTotalUsersCountAC","setUsersAC","React","axios","UsersFunctional","UsersClass","Component","onPageChange","pageNumber","props","setCurrentPage","get","pageSize","currentPage","then","response","setUsers","data","items","render","isFetching","totalUsersCount","users","following","remove","componentDidMount","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId","setTotalUsersCount","totalCount","UsersContainer"],"mappings":"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","sourcesContent":["import {connect} from \"react-redux\";\nimport {followingAC, removeAC, setCurrentPageAC, setTotalUsersCountAC, setUsersAC} from \"../redux/usersReducer\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport UsersFunctional from \"./UsersFunctional\";\n\n\nclass UsersClass extends React.Component {\n    componentDidMount() {\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?count=${this.props.pageSize}&page=${this.props.currentPage}`)\n            .then(response => {\n                this.props.setUsers(response.data.items);\n                // this.props.setTotalUsersCount(response.data.totalCount);\n            })\n    }\n\n    onPageChange = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber);\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?count=${this.props.pageSize}&page=${this.props.currentPage}`)\n            .then(response => {\n                this.props.setUsers(response.data.items)\n            })\n    }\n\n    render = () => {\n        return <>\n            { this.props.isFetching ? <img/> : null }\n            <UsersFunctional totalUsersCount={this.props.totalUsersCount}\n                             pageSize={this.props.pageSize}\n                             currentPage={this.props.currentPage}\n                             onPageChange={this.onPageChange}\n                             users={this.props.users}\n                             following={this.props.following}\n                             remove={this.props.remove}/>\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        following: (userId) => {dispatch(followingAC(userId))},\n        remove: (userId) => {dispatch(removeAC(userId))},\n        setUsers: (users) => {dispatch(setUsersAC(users))},\n        setCurrentPage: (pageNumber) => {dispatch(setCurrentPageAC(pageNumber))},\n        setTotalUsersCount: (totalCount) => {dispatch(setTotalUsersCountAC(totalCount))}\n    }\n}\n\nconst UsersContainer = connect (mapStateToProps, mapDispatchToProps) (UsersClass);\n\nexport default UsersContainer;"]},"metadata":{},"sourceType":"module"}