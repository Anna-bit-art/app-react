{"ast":null,"code":"var _jsxFileName = \"/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/components/Profile/ProfileContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { profileStatus, profileUser } from \"../../redux/profileReducer\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"../../hoc/withRouter\";\nimport { useMatch } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfileClass extends React.Component {\n  componentDidMount() {\n    debugger;\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = 2;\n    }\n\n    this.props.profileUser(userId);\n    this.props.profileStatus(userId);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n        profile: this.props.profile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile\n  };\n};\n\nconst ProfileUrlMatch = props => {\n  _s();\n\n  const match = useMatch('profile/:userId');\n  return /*#__PURE__*/_jsxDEV(ProfileClass, { ...props,\n    match: match\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProfileUrlMatch, \"cBsQFbnnL5/vzUMKwR9xZ+X32oQ=\", false, function () {\n  return [useMatch];\n});\n\n_c = ProfileUrlMatch;\nexport default connect(mapStateToProps, {\n  profileUser,\n  profileStatus\n})(ProfileUrlMatch); // export default compose(\n//     connect (mapStateToProps, {profileUser, profileStatus}),\n//     withRouter,\n//     withAuthRedirect\n// )(ProfileClass);\n// let AuthRedirectComponent = withAuthRedirect(ProfileClass);\n// const ProfileContainer = connect (mapStateToProps, {profileUser}) (withRouter(AuthRedirectComponent));\n// function withRouter(Component) {\n//         function ComponentWithRouterProps(props) {\n//             let location = useLocation();\n//             let navigate = useNavigate();\n//             let params = useParams();\n//             return (\n//                 <Component {...props} router={{location, navigate, params}}/>\n//             );\n//         }\n//         return ComponentWithRouterProps;\n//     }\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileUrlMatch\");","map":{"version":3,"sources":["/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","connect","profileStatus","profileUser","withAuthRedirect","compose","withRouter","useMatch","ProfileClass","Component","componentDidMount","userId","props","match","params","render","profile","mapStateToProps","state","profilePage","ProfileUrlMatch"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,EAAuBC,WAAvB,QAAyC,4BAAzC;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,UAAR,QAAyB,sBAAzB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;;;AAEA,MAAOC,YAAP,SAA4BT,KAAK,CAACU,SAAlC,CAA4C;AACxCC,EAAAA,iBAAiB,GAAG;AAChB;AACA,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAG,CAACA,MAAJ,EAAW;AACPA,MAAAA,MAAM,GAAG,CAAT;AACH;;AACD,SAAKC,KAAL,CAAWT,WAAX,CAAuBQ,MAAvB;AACA,SAAKC,KAAL,CAAWV,aAAX,CAAyBS,MAAzB;AACH;;AACDI,EAAAA,MAAM,GAAI;AACN,wBACI;AAAA,6BACI,QAAC,OAAD,OAAa,KAAKH,KAAlB;AAAyB,QAAA,OAAO,EAAE,KAAKA,KAAL,CAAWI;AAA7C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAhBuC;;AAmB5C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHF,IAAAA,OAAO,EAAEE,KAAK,CAACC,WAAN,CAAkBH;AADxB,GAAP;AAGH,CAJD;;AAOA,MAAMI,eAAe,GAAIR,KAAD,IAAU;AAAA;;AAC9B,QAAMC,KAAK,GAAGN,QAAQ,CAAC,iBAAD,CAAtB;AACA,sBAAO,QAAC,YAAD,OAAkBK,KAAlB;AAAyB,IAAA,KAAK,EAAEC;AAAhC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAHD;;GAAMO,e;UACYb,Q;;;KADZa,e;AAMN,eAAenB,OAAO,CAACgB,eAAD,EAAkB;AAACd,EAAAA,WAAD;AAAcD,EAAAA;AAAd,CAAlB,CAAP,CAAuDkB,eAAvD,CAAf,C,CAIA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {profileStatus, profileUser} from \"../../redux/profileReducer\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {withRouter} from \"../../hoc/withRouter\";\nimport {useMatch} from \"react-router-dom\";\n\nclass  ProfileClass extends React.Component {\n    componentDidMount() {\n        debugger;\n        let userId = this.props.match.params.userId;\n        if(!userId){\n            userId = 2;\n        }\n        this.props.profileUser(userId);\n        this.props.profileStatus(userId);\n    }\n    render () {\n        return (\n            <div>\n                <Profile {...this.props} profile={this.props.profile} />\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile\n    }\n}\n\n\nconst ProfileUrlMatch = (props)=> {\n    const match = useMatch('profile/:userId');\n    return <ProfileClass {...props} match={match} />\n}\n\n\nexport default connect(mapStateToProps, {profileUser, profileStatus})(ProfileUrlMatch);\n\n\n\n// export default compose(\n//     connect (mapStateToProps, {profileUser, profileStatus}),\n//     withRouter,\n//     withAuthRedirect\n// )(ProfileClass);\n\n\n\n// let AuthRedirectComponent = withAuthRedirect(ProfileClass);\n// const ProfileContainer = connect (mapStateToProps, {profileUser}) (withRouter(AuthRedirectComponent));\n// function withRouter(Component) {\n//         function ComponentWithRouterProps(props) {\n//             let location = useLocation();\n//             let navigate = useNavigate();\n//             let params = useParams();\n//             return (\n//                 <Component {...props} router={{location, navigate, params}}/>\n//             );\n//         }\n//         return ComponentWithRouterProps;\n//     }"]},"metadata":{},"sourceType":"module"}