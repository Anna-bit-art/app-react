{"ast":null,"code":"import React from \"react\";\nimport { addPostActionCreator, updateNewPostActionCreator } from \"../../redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport StoreContext from \"../../../StoreContext\";\nimport { connect } from \"react-redux\"; // const MyPostsContainer = () => {\n//     return (\n//         <StoreContext.Consumer>\n//         {(store) => {\n//             let addPost = () => {\n//                 store.dispatch(addPostActionCreator());\n//             }\n//             let onPostChange = (text) => {\n//                 store.dispatch(updateNewPostActionCreator(text));\n//             }\n//             return <MyPosts updateNewPostActionCreator={onPostChange}\n//                             addPost={addPost}\n//                             posts={store.getState().profilePage.posts}\n//                             newPostText={store.getState().profilePage.newPostText}/>\n//             }\n//         }\n//         </StoreContext.Consumer>\n//     )\n// }\n\nlet mapStateToProps = state => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    updateNewPostActionCreator: text => {\n      dispatch(updateNewPostActionCreator(text));\n    },\n    addPost: () => {\n      dispatch(addPostActionCreator());\n    }\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;","map":{"version":3,"sources":["/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/components/Profile/MyPosts/MyPostsContainer.jsx"],"names":["React","addPostActionCreator","updateNewPostActionCreator","MyPosts","StoreContext","connect","mapStateToProps","state","posts","profilePage","newPostText","mapDispatchToProps","dispatch","text","addPost","MyPostsContainer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,oBAAR,EAA8BC,0BAA9B,QAA+D,4BAA/D;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,WAAN,CAAkBD,KADtB;AAEHE,IAAAA,WAAW,EAAEH,KAAK,CAACE,WAAN,CAAkBC;AAF5B,GAAP;AAIH,CALD;;AAOA,IAAIC,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHV,IAAAA,0BAA0B,EAAGW,IAAD,IAAU;AAClCD,MAAAA,QAAQ,CAACV,0BAA0B,CAACW,IAAD,CAA3B,CAAR;AACH,KAHE;AAIHC,IAAAA,OAAO,EAAE,MAAM;AACXF,MAAAA,QAAQ,CAACX,oBAAoB,EAArB,CAAR;AACH;AANE,GAAP;AAQH,CATD;;AAWA,MAAMc,gBAAgB,GAAGV,OAAO,CAACC,eAAD,EAAkBK,kBAAlB,CAAP,CAA8CR,OAA9C,CAAzB;AACA,eAAeY,gBAAf","sourcesContent":["import React from \"react\";\nimport {addPostActionCreator, updateNewPostActionCreator} from \"../../redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport StoreContext from \"../../../StoreContext\";\nimport {connect} from \"react-redux\";\n\n// const MyPostsContainer = () => {\n//     return (\n//         <StoreContext.Consumer>\n//         {(store) => {\n//             let addPost = () => {\n//                 store.dispatch(addPostActionCreator());\n//             }\n//             let onPostChange = (text) => {\n//                 store.dispatch(updateNewPostActionCreator(text));\n//             }\n//             return <MyPosts updateNewPostActionCreator={onPostChange}\n//                             addPost={addPost}\n//                             posts={store.getState().profilePage.posts}\n//                             newPostText={store.getState().profilePage.newPostText}/>\n//             }\n//         }\n//         </StoreContext.Consumer>\n//     )\n// }\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        updateNewPostActionCreator: (text) => {\n            dispatch(updateNewPostActionCreator(text));\n        },\n        addPost: () => {\n            dispatch(addPostActionCreator());\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\nexport default MyPostsContainer;"]},"metadata":{},"sourceType":"module"}