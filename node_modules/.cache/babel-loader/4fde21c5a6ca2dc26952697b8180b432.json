{"ast":null,"code":"let store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 'p1',\n        likesCount: 12,\n        text: \"Oh, I was not made for heaven. No, I don't want to go to heaven. Hell is much better. Think of all the interesting people you're going to meet down there!\"\n      }, {\n        id: 'p2',\n        likesCount: 3,\n        text: \"The reason we're successful, darling? My overall charisma, of course.\"\n      }, {\n        id: 'p3',\n        likesCount: 72,\n        text: \"I am a romantic, but I do put up a barrier around myself, so it is hard for people to get in and to know the real me.\"\n      }],\n      newPostText: 'Make your the new post...'\n    },\n    messagesPage: {\n      dialogs: [{\n        id: 'david',\n        name: 'David Bowie'\n      }, {\n        id: 'queen',\n        name: 'Group Queen'\n      }, {\n        id: 'kenye',\n        name: 'Kanye West'\n      }],\n      messages: [{\n        id: 1,\n        text: 'Pressure pushing down on me'\n      }, {\n        id: 2,\n        text: 'Pressing down on you, no man ask for'\n      }, {\n        id: 3,\n        text: 'Um ba ba be'\n      }],\n      newMessageText: 'Send a message...'\n    }\n  },\n\n  _callSubscriber() {\n    console.log('State was changed');\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  // addPost() {\n  //     let newPost = {\n  //         id: 'p4',\n  //         likesCount: 0,\n  //         text: this._state.profilePage.newPostText\n  //     }\n  //     this._state.profilePage.posts.unshift(newPost);\n  //     this._state.profilePage.newPostText = '';\n  //     this._callSubscriber(this._state);\n  // },\n  //\n  // updateNewPostText(newText) {\n  //     this._state.profilePage.newPostText = newText;\n  //     this._callSubscriber(this._state);\n  // },\n  addMessage(messageText) {\n    let newMessage = {\n      id: 4,\n      text: messageText\n    };\n\n    this._state.messagesPage.messages.push(newMessage);\n\n    this._callSubscriber(this._state);\n  },\n\n  dispatch(action) {\n    if (action.type === 'ADD-POST') {\n      let newPost = {\n        id: 'p4',\n        likesCount: 0,\n        text: this._state.profilePage.newPostText\n      };\n\n      this._state.profilePage.posts.unshift(newPost);\n\n      this._state.profilePage.newPostText = '';\n\n      this._callSubscriber(this._state);\n    } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\n      this._state.profilePage.newPostText = action.newText;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === 'ADD-MESSAGE') {\n      let newMessage = {\n        id: 4,\n        text: this._state.messagesPage.newMessageText\n      };\n\n      this._state.messagesPage.messages.push(newMessage);\n\n      this._state.messagesPage.newMessageText = '';\n\n      this._callSubscriber(this._state);\n    } else if (action.type === 'UPDATE-NEW-MESSAGE-TEXT') {\n      this._state.messagesPage.newMessageText = action.newText;\n\n      this._callSubscriber(this._state);\n    }\n  }\n\n};\nwindow.store = store;\nexport default store;","map":{"version":3,"sources":["/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/components/redux/state.js"],"names":["store","_state","profilePage","posts","id","likesCount","text","newPostText","messagesPage","dialogs","name","messages","newMessageText","_callSubscriber","console","log","getState","subscribe","observer","addMessage","messageText","newMessage","push","dispatch","action","type","newPost","unshift","newText","window"],"mappings":"AAAA,IAAIA,KAAK,GAAG;AACRC,EAAAA,MAAM,EAAE;AACJC,IAAAA,WAAW,EAAE;AACTC,MAAAA,KAAK,EAAE,CACH;AACIC,QAAAA,EAAE,EAAE,IADR;AAEIC,QAAAA,UAAU,EAAE,EAFhB;AAGIC,QAAAA,IAAI,EAAE;AAHV,OADG,EAMH;AACIF,QAAAA,EAAE,EAAE,IADR;AAEIC,QAAAA,UAAU,EAAE,CAFhB;AAGIC,QAAAA,IAAI,EAAE;AAHV,OANG,EAWH;AACIF,QAAAA,EAAE,EAAE,IADR;AAEIC,QAAAA,UAAU,EAAE,EAFhB;AAGIC,QAAAA,IAAI,EAAE;AAHV,OAXG,CADE;AAkBTC,MAAAA,WAAW,EAAE;AAlBJ,KADT;AAqBJC,IAAAA,YAAY,EAAE;AACVC,MAAAA,OAAO,EAAE,CAAC;AAACL,QAAAA,EAAE,EAAE,OAAL;AAAcM,QAAAA,IAAI,EAAE;AAApB,OAAD,EACL;AAACN,QAAAA,EAAE,EAAE,OAAL;AAAcM,QAAAA,IAAI,EAAE;AAApB,OADK,EAEL;AAACN,QAAAA,EAAE,EAAE,OAAL;AAAcM,QAAAA,IAAI,EAAE;AAApB,OAFK,CADC;AAIVC,MAAAA,QAAQ,EAAE,CAAC;AAACP,QAAAA,EAAE,EAAE,CAAL;AAAQE,QAAAA,IAAI,EAAE;AAAd,OAAD,EACN;AAACF,QAAAA,EAAE,EAAE,CAAL;AAAQE,QAAAA,IAAI,EAAE;AAAd,OADM,EAEN;AAACF,QAAAA,EAAE,EAAE,CAAL;AAAQE,QAAAA,IAAI,EAAE;AAAd,OAFM,CAJA;AAQVM,MAAAA,cAAc,EAAE;AARN;AArBV,GADA;;AAiCRC,EAAAA,eAAe,GAAG;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,GAnCO;;AAqCRC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKf,MAAZ;AACH,GAvCO;;AAwCRgB,EAAAA,SAAS,CAACC,QAAD,EAAW;AAChB,SAAKL,eAAL,GAAuBK,QAAvB;AACH,GA1CO;;AA2CR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,UAAU,CAACC,WAAD,EAAc;AACpB,QAAIC,UAAU,GAAG;AACbjB,MAAAA,EAAE,EAAE,CADS;AAEbE,MAAAA,IAAI,EAAEc;AAFO,KAAjB;;AAIA,SAAKnB,MAAL,CAAYO,YAAZ,CAAyBG,QAAzB,CAAkCW,IAAlC,CAAuCD,UAAvC;;AACA,SAAKR,eAAL,CAAqB,KAAKZ,MAA1B;AACH,GAjEO;;AAmERsB,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACb,QAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC5B,UAAIC,OAAO,GAAG;AACVtB,QAAAA,EAAE,EAAE,IADM;AAEVC,QAAAA,UAAU,EAAE,CAFF;AAGVC,QAAAA,IAAI,EAAE,KAAKL,MAAL,CAAYC,WAAZ,CAAwBK;AAHpB,OAAd;;AAKA,WAAKN,MAAL,CAAYC,WAAZ,CAAwBC,KAAxB,CAA8BwB,OAA9B,CAAsCD,OAAtC;;AACA,WAAKzB,MAAL,CAAYC,WAAZ,CAAwBK,WAAxB,GAAsC,EAAtC;;AACA,WAAKM,eAAL,CAAqB,KAAKZ,MAA1B;AAEH,KAVD,MAUO,IAAIuB,MAAM,CAACC,IAAP,KAAgB,sBAApB,EAA4C;AAC/C,WAAKxB,MAAL,CAAYC,WAAZ,CAAwBK,WAAxB,GAAsCiB,MAAM,CAACI,OAA7C;;AACA,WAAKf,eAAL,CAAqB,KAAKZ,MAA1B;AAEH,KAJM,MAIA,IAAIuB,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AACtC,UAAIJ,UAAU,GAAG;AACbjB,QAAAA,EAAE,EAAE,CADS;AAEbE,QAAAA,IAAI,EAAE,KAAKL,MAAL,CAAYO,YAAZ,CAAyBI;AAFlB,OAAjB;;AAIA,WAAKX,MAAL,CAAYO,YAAZ,CAAyBG,QAAzB,CAAkCW,IAAlC,CAAuCD,UAAvC;;AACA,WAAKpB,MAAL,CAAYO,YAAZ,CAAyBI,cAAzB,GAA0C,EAA1C;;AACA,WAAKC,eAAL,CAAqB,KAAKZ,MAA1B;AACH,KARM,MAQA,IAAIuB,MAAM,CAACC,IAAP,KAAgB,yBAApB,EAA+C;AAClD,WAAKxB,MAAL,CAAYO,YAAZ,CAAyBI,cAAzB,GAA0CY,MAAM,CAACI,OAAjD;;AACA,WAAKf,eAAL,CAAqB,KAAKZ,MAA1B;AACH;AACJ;;AA9FO,CAAZ;AAiGA4B,MAAM,CAAC7B,KAAP,GAAeA,KAAf;AAEA,eAAeA,KAAf","sourcesContent":["let store = {\n    _state: {\n        profilePage: {\n            posts: [\n                {\n                    id: 'p1',\n                    likesCount: 12,\n                    text: \"Oh, I was not made for heaven. No, I don't want to go to heaven. Hell is much better. Think of all the interesting people you're going to meet down there!\"\n                },\n                {\n                    id: 'p2',\n                    likesCount: 3,\n                    text: \"The reason we're successful, darling? My overall charisma, of course.\"\n                },\n                {\n                    id: 'p3',\n                    likesCount: 72,\n                    text: \"I am a romantic, but I do put up a barrier around myself, so it is hard for people to get in and to know the real me.\"\n                }\n            ],\n            newPostText: 'Make your the new post...'\n        },\n        messagesPage: {\n            dialogs: [{id: 'david', name: 'David Bowie'},\n                {id: 'queen', name: 'Group Queen'},\n                {id: 'kenye', name: 'Kanye West'}],\n            messages: [{id: 1, text: 'Pressure pushing down on me'},\n                {id: 2, text: 'Pressing down on you, no man ask for'},\n                {id: 3, text: 'Um ba ba be'}],\n\n            newMessageText: 'Send a message...'\n        }\n    },\n    _callSubscriber() {\n        console.log('State was changed');\n    },\n\n    getState() {\n        return this._state;\n    },\n    subscribe(observer) {\n        this._callSubscriber = observer;\n    },\n    // addPost() {\n    //     let newPost = {\n    //         id: 'p4',\n    //         likesCount: 0,\n    //         text: this._state.profilePage.newPostText\n    //     }\n    //     this._state.profilePage.posts.unshift(newPost);\n    //     this._state.profilePage.newPostText = '';\n    //     this._callSubscriber(this._state);\n    // },\n    //\n    // updateNewPostText(newText) {\n    //     this._state.profilePage.newPostText = newText;\n    //     this._callSubscriber(this._state);\n    // },\n    addMessage(messageText) {\n        let newMessage = {\n            id: 4,\n            text: messageText\n        }\n        this._state.messagesPage.messages.push(newMessage);\n        this._callSubscriber(this._state);\n    },\n\n    dispatch(action) {\n        if (action.type === 'ADD-POST') {\n            let newPost = {\n                id: 'p4',\n                likesCount: 0,\n                text: this._state.profilePage.newPostText\n            }\n            this._state.profilePage.posts.unshift(newPost);\n            this._state.profilePage.newPostText = '';\n            this._callSubscriber(this._state);\n\n        } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\n            this._state.profilePage.newPostText = action.newText;\n            this._callSubscriber(this._state);\n\n        } else if (action.type === 'ADD-MESSAGE') {\n            let newMessage = {\n                id: 4,\n                text: this._state.messagesPage.newMessageText\n            }\n            this._state.messagesPage.messages.push(newMessage);\n            this._state.messagesPage.newMessageText = '';\n            this._callSubscriber(this._state);\n        } else if (action.type === 'UPDATE-NEW-MESSAGE-TEXT') {\n            this._state.messagesPage.newMessageText = action.newText;\n            this._callSubscriber(this._state);\n        }\n    }\n\n}\nwindow.store = store;\n\nexport default store;\n\n\n"]},"metadata":{},"sourceType":"module"}