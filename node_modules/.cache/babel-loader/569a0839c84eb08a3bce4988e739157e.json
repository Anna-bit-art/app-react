{"ast":null,"code":"import { authAPI } from \"../api/api\"; // import noAvatar from \"../../../img/no-avatar.png\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\nconst SET_LOGIN = 'SET_LOGIN'; // const SET_PHOTO = 'SET_PHOTO';\n\nlet initialState = {\n  id: null,\n  photo: null,\n  email: null,\n  login: null,\n  isAuth: false,\n  isFetching: false,\n  password: null,\n  rememberMe: false,\n  captcha: null\n};\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER_DATA:\n      return { ...state,\n        ...action.data,\n        isAuth: true\n      };\n\n    case SET_LOGIN:\n      return { ...state,\n        ...action.data\n      };\n    // case SET_PHOTO:\n    //     return {\n    //         ...state,\n    //         photo: action.photo\n    //     }\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (id, email, login) => ({\n  type: SET_USER_DATA,\n  data: {\n    id,\n    email,\n    login\n  }\n});\nexport const setLogin = (email, password, rememberMe, captcha) => ({\n  type: SET_LOGIN,\n  data: {\n    email,\n    password,\n    rememberMe,\n    captcha\n  }\n}); // export const setAuthPhoto = (photo) => ({type: SET_PHOTO, photo});\n\nexport const authMe = () => {\n  return dispatch => {\n    authAPI.me().then(data => {\n      if (data.resultCode === 0) {\n        dispatch(setAuthUserData(data.data.id, data.data.email, data.data.login));\n      }\n    });\n  };\n};\nexport const login = () => {\n  return dispatch => {\n    authAPI.login().then(data => {});\n  };\n}; // export const myPhoto = (photo) => {\n//     return (dispatch) => {\n//         authAPI.myPhoto()\n//             .then(response => {\n//                 if (response.data.resultCode === 0) {\n//                     dispatch(setAuthPhoto(photo))\n//                 }\n//             })\n//     }\n// }\n\nexport default authReducer;","map":{"version":3,"sources":["/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/redux/authReducer.js"],"names":["authAPI","SET_USER_DATA","SET_LOGIN","initialState","id","photo","email","login","isAuth","isFetching","password","rememberMe","captcha","authReducer","state","action","type","data","setAuthUserData","setLogin","authMe","dispatch","me","then","resultCode"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,YAAtB,C,CACA;;AAEA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,SAAS,GAAG,WAAlB,C,CACA;;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,EAAE,EAAE,IADW;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,KAAK,EAAE,IAJQ;AAKfC,EAAAA,MAAM,EAAE,KALO;AAMfC,EAAAA,UAAU,EAAE,KANG;AAOfC,EAAAA,QAAQ,EAAE,IAPK;AAQfC,EAAAA,UAAU,EAAE,KARG;AASfC,EAAAA,OAAO,EAAE;AATM,CAAnB;;AAYA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBX,YAAyB;AAAA,MAAXY,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKf,aAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEH,WAAGC,MAAM,CAACE,IAFP;AAGHT,QAAAA,MAAM,EAAE;AAHL,OAAP;;AAKJ,SAAKN,SAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEH,WAAGC,MAAM,CAACE;AAFP,OAAP;AAIJ;AACA;AACA;AACA;AACA;;AACA;AACI,aAAOH,KAAP;AAlBR;AAoBH,CArBD;;AAuBA,OAAO,MAAMI,eAAe,GAAG,CAACd,EAAD,EAAKE,KAAL,EAAYC,KAAZ,MAAuB;AAACS,EAAAA,IAAI,EAACf,aAAN;AAAqBgB,EAAAA,IAAI,EAAC;AAACb,IAAAA,EAAD;AAAKE,IAAAA,KAAL;AAAYC,IAAAA;AAAZ;AAA1B,CAAvB,CAAxB;AACP,OAAO,MAAMY,QAAQ,GAAG,CAACb,KAAD,EAAQI,QAAR,EAAkBC,UAAlB,EAA8BC,OAA9B,MAA2C;AAACI,EAAAA,IAAI,EAACd,SAAN;AAAiBe,EAAAA,IAAI,EAAC;AAACX,IAAAA,KAAD;AAAQI,IAAAA,QAAR;AAAkBC,IAAAA,UAAlB;AAA8BC,IAAAA;AAA9B;AAAtB,CAA3C,CAAjB,C,CACP;;AAEA,OAAO,MAAMQ,MAAM,GAAG,MAAM;AACxB,SAAQC,QAAD,IAAc;AACjBrB,IAAAA,OAAO,CAACsB,EAAR,GACKC,IADL,CACUN,IAAI,IAAI;AACV,UAAIA,IAAI,CAACO,UAAL,KAAoB,CAAxB,EAA2B;AACvBH,QAAAA,QAAQ,CAACH,eAAe,CAACD,IAAI,CAACA,IAAL,CAAUb,EAAX,EAAea,IAAI,CAACA,IAAL,CAAUX,KAAzB,EAAgCW,IAAI,CAACA,IAAL,CAAUV,KAA1C,CAAhB,CAAR;AACH;AACJ,KALL;AAMH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMA,KAAK,GAAG,MAAM;AACvB,SAAQc,QAAD,IAAc;AACjBrB,IAAAA,OAAO,CAACO,KAAR,GACKgB,IADL,CACUN,IAAI,IAAI,CAEb,CAHL;AAIH,GALD;AAMH,CAPM,C,CAaP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeJ,WAAf","sourcesContent":["import {authAPI} from \"../api/api\";\n// import noAvatar from \"../../../img/no-avatar.png\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\nconst SET_LOGIN = 'SET_LOGIN';\n// const SET_PHOTO = 'SET_PHOTO';\n\n\nlet initialState = {\n    id: null,\n    photo: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    isFetching: false,\n    password: null,\n    rememberMe: false,\n    captcha: null\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.data,\n                isAuth: true\n            }\n        case SET_LOGIN:\n            return {\n                ...state,\n                ...action.data\n            }\n        // case SET_PHOTO:\n        //     return {\n        //         ...state,\n        //         photo: action.photo\n        //     }\n        default:\n            return state;\n    }\n}\n\nexport const setAuthUserData = (id, email, login) => ({type:SET_USER_DATA, data:{id, email, login}});\nexport const setLogin = (email, password, rememberMe, captcha) => ({type:SET_LOGIN, data:{email, password, rememberMe, captcha}});\n// export const setAuthPhoto = (photo) => ({type: SET_PHOTO, photo});\n\nexport const authMe = () => {\n    return (dispatch) => {\n        authAPI.me()\n            .then(data => {\n                if (data.resultCode === 0) {\n                    dispatch(setAuthUserData(data.data.id, data.data.email, data.data.login))\n                }\n            })\n    }\n}\n\nexport const login = () => {\n    return (dispatch) => {\n        authAPI.login()\n            .then(data => {\n\n            })\n    }\n}\n\n\n\n\n\n// export const myPhoto = (photo) => {\n//     return (dispatch) => {\n//         authAPI.myPhoto()\n//             .then(response => {\n//                 if (response.data.resultCode === 0) {\n//                     dispatch(setAuthPhoto(photo))\n//                 }\n//             })\n//     }\n// }\n\n\nexport default authReducer;\n\n"]},"metadata":{},"sourceType":"module"}