{"ast":null,"code":"var _jsxFileName = \"/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/components/Profile/ProfileContainer.jsx\";\nimport React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { profileUser } from \"../../redux/profileReducer\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"../../hoc/withRouter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfileClass extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match;\n\n    if (!userId) {\n      userId = 2;\n    }\n\n    this.props.profileUser(userId);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n        profile: this.props.profile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  profileUser\n}), withRouter, withAuthRedirect)(ProfileClass); // let AuthRedirectComponent = withAuthRedirect(ProfileClass);\n// const ProfileContainer = connect (mapStateToProps, {profileUser}) (withRouter(AuthRedirectComponent));\n// function withRouter(Component) {\n//         function ComponentWithRouterProps(props) {\n//             let location = useLocation();\n//             let navigate = useNavigate();\n//             let params = useParams();\n//             return (\n//                 <Component {...props} router={{location, navigate, params}}/>\n//             );\n//         }\n//         return ComponentWithRouterProps;\n//     }","map":{"version":3,"sources":["/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","connect","profileUser","withAuthRedirect","compose","withRouter","ProfileClass","Component","componentDidMount","userId","props","match","render","profile","mapStateToProps","state","profilePage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,4BAA1B;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,UAAR,QAAyB,sBAAzB;;;AAEA,MAAOC,YAAP,SAA4BP,KAAK,CAACQ,SAAlC,CAA4C;AACxCC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAxB;;AACA,QAAG,CAACF,MAAJ,EAAW;AACPA,MAAAA,MAAM,GAAG,CAAT;AACH;;AACD,SAAKC,KAAL,CAAWR,WAAX,CAAuBO,MAAvB;AACH;;AACDG,EAAAA,MAAM,GAAI;AACN,wBACI;AAAA,6BACI,QAAC,OAAD,OAAa,KAAKF,KAAlB;AAAyB,QAAA,OAAO,EAAE,KAAKA,KAAL,CAAWG;AAA7C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAduC;;AAiB5C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHF,IAAAA,OAAO,EAAEE,KAAK,CAACC,WAAN,CAAkBH;AADxB,GAAP;AAGH,CAJD;;AAQA,eAAeT,OAAO,CAClBH,OAAO,CAAEa,eAAF,EAAmB;AAACZ,EAAAA;AAAD,CAAnB,CADW,EAElBG,UAFkB,EAGlBF,gBAHkB,CAAP,CAIbG,YAJa,CAAf,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {profileUser} from \"../../redux/profileReducer\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {withRouter} from \"../../hoc/withRouter\";\n\nclass  ProfileClass extends React.Component {\n    componentDidMount() {\n        let userId = this.props.match;\n        if(!userId){\n            userId = 2;\n        }\n        this.props.profileUser(userId);\n    }\n    render () {\n        return (\n            <div>\n                <Profile {...this.props} profile={this.props.profile}/>\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n    }\n}\n\n\n\nexport default compose(\n    connect (mapStateToProps, {profileUser}),\n    withRouter,\n    withAuthRedirect\n)(ProfileClass);\n\n\n\n// let AuthRedirectComponent = withAuthRedirect(ProfileClass);\n// const ProfileContainer = connect (mapStateToProps, {profileUser}) (withRouter(AuthRedirectComponent));\n// function withRouter(Component) {\n//         function ComponentWithRouterProps(props) {\n//             let location = useLocation();\n//             let navigate = useNavigate();\n//             let params = useParams();\n//             return (\n//                 <Component {...props} router={{location, navigate, params}}/>\n//             );\n//         }\n//         return ComponentWithRouterProps;\n//     }"]},"metadata":{},"sourceType":"module"}