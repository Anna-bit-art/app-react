{"ast":null,"code":"var _jsxFileName = \"/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/components/Messages/MessagesContainer.jsx\";\nimport React from \"react\";\nimport { addMessageActionCreator, updateNewMessageTextActionText } from \"../redux/messagesReducer\";\nimport Messages from \"./Messages\";\nimport StoreContext from \"../../StoreContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessagesContainer = props => {\n  return /*#__PURE__*/_jsxDEV(StoreContext.Consumer, {\n    children: [\" \", store => {\n      let state = props.store.getState();\n\n      let sendMessage = () => {\n        store.dispatch(addMessageActionCreator());\n      };\n\n      let onMessageChange = text => {\n        store.dispatch(updateNewMessageTextActionText(text));\n      };\n\n      return /*#__PURE__*/_jsxDEV(Messages, {\n        addMessage: sendMessage,\n        updateNewMessage: onMessageChange,\n        dialogs: state.messagesPage.dialogs,\n        messages: state.messagesPage.messages,\n        newMessageText: state.messagesPage.newMessageText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, this);\n    }]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MessagesContainer;\nexport default MessagesContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessagesContainer\");","map":{"version":3,"sources":["/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/components/Messages/MessagesContainer.jsx"],"names":["React","addMessageActionCreator","updateNewMessageTextActionText","Messages","StoreContext","MessagesContainer","props","store","state","getState","sendMessage","dispatch","onMessageChange","text","messagesPage","dialogs","messages","newMessageText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,uBAAR,EAAiCC,8BAAjC,QAAsE,0BAAtE;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;;AAGA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAGjC,sBACI,QAAC,YAAD,CAAc,QAAd;AAAA,oBACKC,KAAD,IAAW;AACP,UAAIC,KAAK,GAAGF,KAAK,CAACC,KAAN,CAAYE,QAAZ,EAAZ;;AACA,UAAIC,WAAW,GAAG,MAAM;AACpBH,QAAAA,KAAK,CAACI,QAAN,CAAeV,uBAAuB,EAAtC;AACH,OAFD;;AAGA,UAAIW,eAAe,GAAIC,IAAD,IAAU;AAC5BN,QAAAA,KAAK,CAACI,QAAN,CAAeT,8BAA8B,CAACW,IAAD,CAA7C;AACH,OAFD;;AAIT,0BAAO,QAAC,QAAD;AAAU,QAAA,UAAU,EAAEH,WAAtB;AACG,QAAA,gBAAgB,EAAEE,eADrB;AAEG,QAAA,OAAO,EAAEJ,KAAK,CAACM,YAAN,CAAmBC,OAF/B;AAGG,QAAA,QAAQ,EAAEP,KAAK,CAACM,YAAN,CAAmBE,QAHhC;AAIG,QAAA,cAAc,EAAER,KAAK,CAACM,YAAN,CAAmBG;AAJtC;AAAA;AAAA;AAAA;AAAA,cAAP;AAKM,KAfL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAtBD;;KAAMZ,iB;AAwBN,eAAeA,iBAAf","sourcesContent":["import React from \"react\";\nimport {addMessageActionCreator, updateNewMessageTextActionText} from \"../redux/messagesReducer\";\nimport Messages from \"./Messages\";\nimport StoreContext from \"../../StoreContext\";\n\n\nconst MessagesContainer = (props) => {\n\n\n    return (\n        <StoreContext.Consumer> {\n            (store) => {\n                let state = props.store.getState();\n                let sendMessage = () => {\n                    store.dispatch(addMessageActionCreator());\n                };\n                let onMessageChange = (text) => {\n                    store.dispatch(updateNewMessageTextActionText(text));\n                };\n\n       return <Messages addMessage={sendMessage}\n                 updateNewMessage={onMessageChange}\n                 dialogs={state.messagesPage.dialogs}\n                 messages={state.messagesPage.messages}\n                 newMessageText={state.messagesPage.newMessageText}/>\n            }\n        }\n        </StoreContext.Consumer>)\n}\n\nexport default MessagesContainer;"]},"metadata":{},"sourceType":"module"}