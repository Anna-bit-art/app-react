{"ast":null,"code":"var _jsxFileName = \"/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/hoc/withAuthRedirect.js\";\nimport { Navigate } from \"react-router-dom\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet mapStateToPropsForRedirect = state => {\n  return {\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport const withAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 43\n      }, this);\n      return /*#__PURE__*/_jsxDEV(Component, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 20\n      }, this);\n    }\n\n  }\n\n  return connect(mapStateToPropsForRedirect)(RedirectComponent);\n};","map":{"version":3,"sources":["/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/hoc/withAuthRedirect.js"],"names":["Navigate","React","connect","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","render","props"],"mappings":";AAAA,SAAQA,QAAR,QAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAGA,IAAIC,0BAA0B,GAAIC,KAAD,IAAW;AACxC,SAAO;AACHC,IAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AADhB,GAAP;AAGH,CAJD;;AAMA,OAAO,MAAME,gBAAgB,GAAIC,SAAD,IAAe;AAC3C,QAAMC,iBAAN,SAAgCR,KAAK,CAACO,SAAtC,CAAgD;AAC5CE,IAAAA,MAAM,GAAG;AACL,UAAG,CAAC,KAAKC,KAAL,CAAWN,MAAf,EAAuB,oBAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AACvB,0BAAO,QAAC,SAAD,OAAe,KAAKM;AAApB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAJ2C;;AAMhD,SAAOT,OAAO,CAACC,0BAAD,CAAP,CAAoCM,iBAApC,CAAP;AACH,CARM","sourcesContent":["import {Navigate} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\n\nlet mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if(!this.props.isAuth) return <Navigate to={\"/login\"} />\n            return <Component {...this.props} />\n        }\n    }\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\n}\n\n\n"]},"metadata":{},"sourceType":"module"}