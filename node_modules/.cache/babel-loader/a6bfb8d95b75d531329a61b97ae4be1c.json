{"ast":null,"code":"const ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 'p1',\n        likesCount: 12,\n        text: \"Oh, I was not made for heaven. No, I don't want to go to heaven. Hell is much better. Think of all the interesting people you're going to meet down there!\"\n      }, {\n        id: 'p2',\n        likesCount: 3,\n        text: \"The reason we're successful, darling? My overall charisma, of course.\"\n      }, {\n        id: 'p3',\n        likesCount: 72,\n        text: \"I am a romantic, but I do put up a barrier around myself, so it is hard for people to get in and to know the real me.\"\n      }],\n      newPostText: ''\n    },\n    messagesPage: {\n      dialogs: [{\n        id: 'david',\n        name: 'David Bowie'\n      }, {\n        id: 'queen',\n        name: 'Group Queen'\n      }, {\n        id: 'kenye',\n        name: 'Kanye West'\n      }],\n      messages: [{\n        id: 1,\n        text: 'Pressure pushing down on me'\n      }, {\n        id: 2,\n        text: 'Pressing down on you, no man ask for'\n      }, {\n        id: 3,\n        text: 'Um ba ba be'\n      }],\n      newMessageText: ''\n    }\n  },\n\n  _callSubscriber() {\n    console.log('State was changed');\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    if (action.type === ADD_POST) {\n      // this._addPost();\n      let newPost = {\n        id: 'p4',\n        likesCount: 0,\n        text: this._state.profilePage.newPostText\n      };\n\n      this._state.profilePage.posts.unshift(newPost);\n\n      this._state.profilePage.newPostText = '';\n\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_POST_TEXT) {\n      // this._updateNewPostText(action.newText);\n      this._state.profilePage.newPostText = action.newText;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === ADD_MESSAGE) {\n      // this._addMessage();\n      let newMessage = {\n        id: 4,\n        text: this._state.messagesPage.newMessageText\n      };\n\n      this._state.messagesPage.messages.push(newMessage);\n\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_MESSAGE_TEXT) {\n      // this._updateNewMessageText(action.newText);\n      this._state.messagesPage.newMessageText = action.newText;\n\n      this._callSubscriber(this._state);\n    }\n  } // _addPost() {\n  //     let newPost = {\n  //         id: 'p4',\n  //         likesCount: 0,\n  //         text: this._state.profilePage.newPostText\n  //     }\n  //     this._state.profilePage.posts.unshift(newPost);\n  //     this._state.profilePage.newPostText = '';\n  //     this._callSubscriber(this._state);\n  // },\n  // _updateNewPostText(newText) {\n  //     this._state.profilePage.newPostText = newText;\n  //     this._callSubscriber(this._state);\n  // },\n  // _addMessage() {\n  //     let newMessage = {\n  //         id: 4,\n  //         text: this._state.messagesPage.newMessageText\n  //     }\n  //     this._state.messagesPage.messages.push(newMessage);\n  //     this._callSubscriber(this._state);\n  // },\n  // _updateNewMessageText(newText) {\n  //     this._state.messagesPage.newMessageText = newText;\n  //     this._callSubscriber(this._state);\n  // },\n\n\n};\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport const addMessageActionCreator = () => ({\n  type: ADD_MESSAGE\n});\nexport const updateNewMessageTextActionText = text => ({\n  type: UPDATE_NEW_MESSAGE_TEXT,\n  newText: text\n});\nwindow.store = store;\nexport default store;","map":{"version":3,"sources":["/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/components/redux/store.js"],"names":["ADD_POST","UPDATE_NEW_POST_TEXT","ADD_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","store","_state","profilePage","posts","id","likesCount","text","newPostText","messagesPage","dialogs","name","messages","newMessageText","_callSubscriber","console","log","getState","subscribe","observer","dispatch","action","type","newPost","unshift","newText","newMessage","push","addPostActionCreator","updateNewPostActionCreator","addMessageActionCreator","updateNewMessageTextActionText","window"],"mappings":"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","sourcesContent":["const ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\n\nlet store = {\n    _state: {\n        profilePage: {\n            posts: [\n                {\n                    id: 'p1',\n                    likesCount: 12,\n                    text: \"Oh, I was not made for heaven. No, I don't want to go to heaven. Hell is much better. Think of all the interesting people you're going to meet down there!\"\n                },\n                {\n                    id: 'p2',\n                    likesCount: 3,\n                    text: \"The reason we're successful, darling? My overall charisma, of course.\"\n                },\n                {\n                    id: 'p3',\n                    likesCount: 72,\n                    text: \"I am a romantic, but I do put up a barrier around myself, so it is hard for people to get in and to know the real me.\"\n                }\n            ],\n            newPostText: ''\n        },\n        messagesPage: {\n            dialogs: [{id: 'david', name: 'David Bowie'},\n                {id: 'queen', name: 'Group Queen'},\n                {id: 'kenye', name: 'Kanye West'}],\n            messages: [{id: 1, text: 'Pressure pushing down on me'},\n                {id: 2, text: 'Pressing down on you, no man ask for'},\n                {id: 3, text: 'Um ba ba be'}],\n            newMessageText: ''\n        },\n\n    },\n    _callSubscriber() {\n        console.log('State was changed');\n    },\n    getState() {\n        return this._state;\n    },\n    subscribe(observer) {\n        this._callSubscriber = observer;\n    },\n\n    dispatch(action) {\n        if (action.type === ADD_POST) {\n            // this._addPost();\n            let newPost = {\n                id: 'p4',\n                likesCount: 0,\n                text: this._state.profilePage.newPostText\n            }\n            this._state.profilePage.posts.unshift(newPost);\n            this._state.profilePage.newPostText = '';\n            this._callSubscriber(this._state);\n\n        } else if (action.type === UPDATE_NEW_POST_TEXT) {\n            // this._updateNewPostText(action.newText);\n            this._state.profilePage.newPostText = action.newText;\n            this._callSubscriber(this._state);\n        } else if (action.type === ADD_MESSAGE) {\n            // this._addMessage();\n            let newMessage = {\n                id: 4,\n                text: this._state.messagesPage.newMessageText\n            }\n            this._state.messagesPage.messages.push(newMessage);\n            this._callSubscriber(this._state);\n        } else if (action.type === UPDATE_NEW_MESSAGE_TEXT) {\n            // this._updateNewMessageText(action.newText);\n            this._state.messagesPage.newMessageText = action.newText;\n            this._callSubscriber(this._state);\n        }\n    },\n\n\n    // _addPost() {\n    //     let newPost = {\n    //         id: 'p4',\n    //         likesCount: 0,\n    //         text: this._state.profilePage.newPostText\n    //     }\n    //     this._state.profilePage.posts.unshift(newPost);\n    //     this._state.profilePage.newPostText = '';\n    //     this._callSubscriber(this._state);\n    // },\n    // _updateNewPostText(newText) {\n    //     this._state.profilePage.newPostText = newText;\n    //     this._callSubscriber(this._state);\n    // },\n    // _addMessage() {\n    //     let newMessage = {\n    //         id: 4,\n    //         text: this._state.messagesPage.newMessageText\n    //     }\n    //     this._state.messagesPage.messages.push(newMessage);\n    //     this._callSubscriber(this._state);\n    // },\n    // _updateNewMessageText(newText) {\n    //     this._state.messagesPage.newMessageText = newText;\n    //     this._callSubscriber(this._state);\n    // },\n\n}\n\n export const addPostActionCreator = () => ({type: ADD_POST});\n export const updateNewPostActionCreator = (text) =>\n     ({type: UPDATE_NEW_POST_TEXT, newText: text });\n export const addMessageActionCreator = () => ({type:ADD_MESSAGE});\n export const updateNewMessageTextActionText = (text) =>\n    ({type:UPDATE_NEW_MESSAGE_TEXT, newText: text});\n\nwindow.store = store;\n\nexport default store;\n\n\n"]},"metadata":{},"sourceType":"module"}