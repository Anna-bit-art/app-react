{"ast":null,"code":"var _jsxFileName = \"/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/components/Messages/Messages.jsx\";\nimport s from './Messages.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { Field, Form } from \"react-final-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Messages = props => {\n  let dialogsElements = props.dialogs.map(dialog => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: dialog.name,\n    id: dialog.id\n  }, dialog.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 57\n  }, this));\n  let messagesElements = props.messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n    message: message.text\n  }, message.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 60\n  }, this)); // let onSendMessage = () => {\n  //     props.addMessage();\n  // };\n  //\n  // let onMessageChange = (e) => {\n  //     let text = e.target.value;\n  //     props.updateNewMessage(text);\n  // };\n  // if(!props.isAuth) return <Navigate to={\"/login\"} />\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogsItems,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: dialogsElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: messagesElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MessageForm, {\n        updateNewMessage: props.updateNewMessage,\n        addMessage: props.addMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Messages;\n\nconst MessageForm = props => {\n  const onSubmit = formData => {\n    console.log(formData);\n    props.updateNewMessage(formData.message);\n    props.addMessage();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: onSubmit,\n    children: _ref => {\n      let {\n        handleSubmit\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: 'message',\n          component: 'textarea',\n          type: 'text',\n          placeholder: 'Send a message...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = MessageForm;\nexport default Messages;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Messages\");\n$RefreshReg$(_c2, \"MessageForm\");","map":{"version":3,"sources":["/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/components/Messages/Messages.jsx"],"names":["s","DialogItem","Message","React","Navigate","Field","Form","Messages","props","dialogsElements","dialogs","map","dialog","name","id","messagesElements","messages","message","text","dialogsItems","updateNewMessage","addMessage","MessageForm","onSubmit","formData","console","log","handleSubmit"],"mappings":";AAAA,OAAOA,CAAP,MAAc,uBAAd;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,KAAR,EAAeC,IAAf,QAA0B,kBAA1B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB,MAAIC,eAAe,GAAGD,KAAK,CAACE,OAAN,CAAcC,GAAd,CAAmBC,MAAM,iBAAK,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,MAAM,CAACC,IAAzB;AAA+C,IAAA,EAAE,EAAED,MAAM,CAACE;AAA1D,KAAoCF,MAAM,CAACE,EAA3C;AAAA;AAAA;AAAA;AAAA,UAA9B,CAAtB;AACA,MAAIC,gBAAgB,GAAGP,KAAK,CAACQ,QAAN,CAAeL,GAAf,CAAoBM,OAAO,iBAAK,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,OAAO,CAACC;AAA1B,KAAqCD,OAAO,CAACH,EAA7C;AAAA;AAAA;AAAA;AAAA,UAAhC,CAAvB,CAHwB,CAKxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEd,CAAC,CAACU,OAAlB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEV,CAAC,CAACmB,YAAlB;AAAA,6BACI;AAAA,kBAAMV;AAAN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAET,CAAC,CAACgB,QAAlB;AAAA,8BACI;AAAA,kBAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AAAa,QAAA,gBAAgB,EAAEP,KAAK,CAACY,gBAArC;AAAuD,QAAA,UAAU,EAAEZ,KAAK,CAACa;AAAzE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA9BD;;KAAMd,Q;;AAiCN,MAAMe,WAAW,GAAId,KAAD,IAAW;AAC3B,QAAMe,QAAQ,GAAIC,QAAD,IAAc;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAhB,IAAAA,KAAK,CAACY,gBAAN,CAAuBI,QAAQ,CAACP,OAAhC;AACAT,IAAAA,KAAK,CAACa,UAAN;AACH,GAJD;;AAKA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,QAAhB;AAAA,cACK;AAAA,UAAC;AAACI,QAAAA;AAAD,OAAD;AAAA,0BACG;AAAM,QAAA,QAAQ,EAAEA,YAAhB;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,SAAb;AAAwB,UAAA,SAAS,EAAE,UAAnC;AAA+C,UAAA,IAAI,EAAE,MAArD;AAA6D,UAAA,WAAW,EAAE;AAA1E;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADH;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAjBD;;MAAML,W;AA4BN,eAAef,QAAf","sourcesContent":["import s from './Messages.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport React from \"react\";\nimport {Navigate} from \"react-router-dom\";\nimport {Field, Form} from \"react-final-form\";\n\nconst Messages = (props) => {\n\n    let dialogsElements = props.dialogs.map( dialog => (<DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>) );\n    let messagesElements = props.messages.map( message => (<Message message={message.text} key={message.id}/>) );\n\n    // let onSendMessage = () => {\n    //     props.addMessage();\n    // };\n    //\n    // let onMessageChange = (e) => {\n    //     let text = e.target.value;\n    //     props.updateNewMessage(text);\n    // };\n\n    // if(!props.isAuth) return <Navigate to={\"/login\"} />\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                <div>{dialogsElements}</div>\n            </div>\n\n            <div className={s.messages}>\n                <div>{messagesElements}</div>\n                <MessageForm updateNewMessage={props.updateNewMessage} addMessage={props.addMessage}/>\n                {/*<textarea onChange={onMessageChange} placeholder='Send a message...' value={props.newMessageText}/>*/}\n                {/*<button onClick={onSendMessage}><a href='#'>Send</a></button>*/}\n            </div>\n        </div>\n    )\n}\n\n\nconst MessageForm = (props) => {\n    const onSubmit = (formData) => {\n        console.log(formData)\n        props.updateNewMessage(formData.message);\n        props.addMessage();\n    }\n    return (\n        <Form onSubmit={onSubmit}>\n            {({handleSubmit}) => (\n                <form onSubmit={handleSubmit}>\n                    <Field name={'message'} component={'textarea'} type={'text'} placeholder={'Send a message...'} />\n                    <button>Send</button>\n                </form>\n            )}\n        </Form>\n    )\n\n}\n\n\n\n\n\n\n\n\n\n\nexport default Messages;"]},"metadata":{},"sourceType":"module"}