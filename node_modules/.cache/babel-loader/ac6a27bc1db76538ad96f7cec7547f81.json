{"ast":null,"code":"var _jsxFileName = \"/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/components/Messages/MessagesContainer.jsx\";\nimport React from \"react\";\nimport { addMessageActionCreator, updateNewMessageTextActionText } from \"../redux/messagesReducer\";\nimport Messages from \"./Messages\";\nimport StoreContext from \"../../StoreContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessagesContainer = () => {\n  return /*#__PURE__*/_jsxDEV(StoreContext.Consumer, {\n    children: store => {\n      let sendMessage = () => {\n        store.dispatch(addMessageActionCreator());\n      };\n\n      let onMessageChange = text => {\n        store.dispatch(updateNewMessageTextActionText(text));\n      };\n\n      return /*#__PURE__*/_jsxDEV(Messages, {\n        addMessage: sendMessage,\n        updateNewMessage: onMessageChange,\n        dialogs: store.getState().messagesPage.dialogs,\n        messages: store.getState().messagesPage.messages,\n        newMessageText: store.getState().messagesPage.newMessageText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 20\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n};\n\n_c = MessagesContainer;\nexport default MessagesContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessagesContainer\");","map":{"version":3,"sources":["/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/components/Messages/MessagesContainer.jsx"],"names":["React","addMessageActionCreator","updateNewMessageTextActionText","Messages","StoreContext","MessagesContainer","store","sendMessage","dispatch","onMessageChange","text","getState","messagesPage","dialogs","messages","newMessageText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,uBAAR,EAAiCC,8BAAjC,QAAsE,0BAAtE;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;;AAGA,MAAMC,iBAAiB,GAAG,MAAM;AAE5B,sBAAO,QAAC,YAAD,CAAc,QAAd;AAAA,cAAyBC,KAAD,IAAW;AAClC,UAAIC,WAAW,GAAG,MAAM;AACpBD,QAAAA,KAAK,CAACE,QAAN,CAAeP,uBAAuB,EAAtC;AACH,OAFD;;AAIA,UAAIQ,eAAe,GAAIC,IAAD,IAAU;AAC5BJ,QAAAA,KAAK,CAACE,QAAN,CAAeN,8BAA8B,CAACQ,IAAD,CAA7C;AACH,OAFD;;AAIA,0BAAO,QAAC,QAAD;AAAU,QAAA,UAAU,EAAEH,WAAtB;AACU,QAAA,gBAAgB,EAAEE,eAD5B;AAEU,QAAA,OAAO,EAAEH,KAAK,CAACK,QAAN,GAAiBC,YAAjB,CAA8BC,OAFjD;AAGU,QAAA,QAAQ,EAAEP,KAAK,CAACK,QAAN,GAAiBC,YAAjB,CAA8BE,QAHlD;AAIU,QAAA,cAAc,EAAER,KAAK,CAACK,QAAN,GAAiBC,YAAjB,CAA8BG;AAJxD;AAAA;AAAA;AAAA;AAAA,cAAP;AAMC;AAfF;AAAA;AAAA;AAAA;AAAA,UAAP;AAiBH,CAnBD;;KAAMV,iB;AAqBN,eAAeA,iBAAf","sourcesContent":["import React from \"react\";\nimport {addMessageActionCreator, updateNewMessageTextActionText} from \"../redux/messagesReducer\";\nimport Messages from \"./Messages\";\nimport StoreContext from \"../../StoreContext\";\n\n\nconst MessagesContainer = () => {\n\n    return <StoreContext.Consumer>{(store) => {\n            let sendMessage = () => {\n                store.dispatch(addMessageActionCreator());\n            }\n\n            let onMessageChange = (text) => {\n                store.dispatch(updateNewMessageTextActionText(text));\n            }\n\n            return <Messages addMessage={sendMessage}\n                             updateNewMessage={onMessageChange}\n                             dialogs={store.getState().messagesPage.dialogs}\n                             messages={store.getState().messagesPage.messages}\n                             newMessageText={store.getState().messagesPage.newMessageText}/>\n\n            }\n        }</StoreContext.Consumer>\n}\n\nexport default MessagesContainer;"]},"metadata":{},"sourceType":"module"}