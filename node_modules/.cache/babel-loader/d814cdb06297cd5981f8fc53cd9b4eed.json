{"ast":null,"code":"var _jsxFileName = \"/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/components/Users/UsersContainer.jsx\";\nimport { connect } from \"react-redux\";\nimport { deleteUser, followUsers, getUsers, toggleInProgress } from \"../../redux/usersReducer\";\nimport React from \"react\";\nimport UsersFunctional from \"./UsersFunctional\";\nimport Preloader from \"../common/preloader/preloader\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersClass extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageChange = pageNumber => {\n      this.props.getUsers(this.props.pageSize, pageNumber);\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 39\n        }, this) : null, /*#__PURE__*/_jsxDEV(UsersFunctional, {\n          totalUsersCount: this.props.totalUsersCount,\n          pageSize: this.props.pageSize,\n          currentPage: this.props.currentPage,\n          onPageChange: this.onPageChange,\n          users: this.props.users,\n          followingInProgress: this.props.followingInProgress,\n          deleteUser: this.props.deleteUser,\n          followUsers: this.props.followUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsers(this.props.pageSize, this.props.currentPage); // this.props.toggleIsFetching(true);\n    // UsersApi.getUsers(this.props.pageSize, this.props.currentPage)\n    //     .then(data => {\n    //         this.props.toggleIsFetching(false);\n    //         this.props.setUsers(data.items);\n    //         // this.props.setTotalUsersCount(response.data.totalCount);-\n    //     })\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n};\n\nexport default compose(withAuthRedirect, connect(mapStateToProps, {\n  toggleInProgress,\n  getUsers,\n  deleteUser,\n  followUsers\n}))(UsersClass); // const UsersContainer = withAuthRedirect (\n//     connect(mapStateToProps, {toggleInProgress, getUsers, deleteUser, followUsers}) (UsersClass)\n// );\n// export default UsersContainer;\n// let mapDispatchToProps = (dispatch) => {\n//     return {\n//         following: (userId) => {dispatch(followingAC(userId))},\n//         remove: (userId) => {dispatch(removeAC(userId))},\n//         setUsers: (users) => {dispatch(setUsersAC(users))},\n//         setCurrentPage: (pageNumber) => {dispatch(setCurrentPageAC(pageNumber))},\n//         setTotalUsersCount: (totalCount) => {dispatch(setTotalUsersCountAC(totalCount))},\n//         toggleIsFetching: (isFetching) => {dispatch(toggleIsFetchingAC(isFetching))}\n//     }\n// }\n// let AuthRedirectComponent = withAuthRedirect(UsersClass);","map":{"version":3,"sources":["/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/components/Users/UsersContainer.jsx"],"names":["connect","deleteUser","followUsers","getUsers","toggleInProgress","React","UsersFunctional","Preloader","withAuthRedirect","compose","UsersClass","Component","onPageChange","pageNumber","props","pageSize","render","isFetching","totalUsersCount","currentPage","users","followingInProgress","componentDidMount","mapStateToProps","state","usersPage"],"mappings":";AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,EAAoBC,WAApB,EAAiCC,QAAjC,EAA2CC,gBAA3C,QACK,0BADL;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;;;;AAGA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAWrCC,YAXqC,GAWrBC,UAAD,IAAgB;AAC3B,WAAKC,KAAL,CAAWX,QAAX,CAAoB,KAAKW,KAAL,CAAWC,QAA/B,EAAyCF,UAAzC;AACH,KAboC;;AAAA,SAcrCG,MAdqC,GAc5B,MAAM;AACX,0BAAO;AAAA,mBACD,KAAKF,KAAL,CAAWG,UAAX,gBAAwB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAAxB,GAAwC,IADvC,eAEH,QAAC,eAAD;AAAiB,UAAA,eAAe,EAAE,KAAKH,KAAL,CAAWI,eAA7C;AACiB,UAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWC,QADtC;AAEiB,UAAA,WAAW,EAAE,KAAKD,KAAL,CAAWK,WAFzC;AAGiB,UAAA,YAAY,EAAE,KAAKP,YAHpC;AAIiB,UAAA,KAAK,EAAE,KAAKE,KAAL,CAAWM,KAJnC;AAKiB,UAAA,mBAAmB,EAAE,KAAKN,KAAL,CAAWO,mBALjD;AAMiB,UAAA,UAAU,EAAE,KAAKP,KAAL,CAAWb,UANxC;AAOiB,UAAA,WAAW,EAAE,KAAKa,KAAL,CAAWZ;AAPzC;AAAA;AAAA;AAAA;AAAA,gBAFG;AAAA,sBAAP;AAWH,KA1BoC;AAAA;;AACrCoB,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,KAAL,CAAWX,QAAX,CAAoB,KAAKW,KAAL,CAAWC,QAA/B,EAAyC,KAAKD,KAAL,CAAWK,WAApD,EADgB,CAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAVoC;;AA6BzC,IAAII,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHJ,IAAAA,KAAK,EAAEI,KAAK,CAACC,SAAN,CAAgBL,KADpB;AAEHL,IAAAA,QAAQ,EAAES,KAAK,CAACC,SAAN,CAAgBV,QAFvB;AAGHG,IAAAA,eAAe,EAAEM,KAAK,CAACC,SAAN,CAAgBP,eAH9B;AAIHC,IAAAA,WAAW,EAAEK,KAAK,CAACC,SAAN,CAAgBN,WAJ1B;AAKHF,IAAAA,UAAU,EAAEO,KAAK,CAACC,SAAN,CAAgBR,UALzB;AAMHI,IAAAA,mBAAmB,EAAEG,KAAK,CAACC,SAAN,CAAgBJ;AANlC,GAAP;AAQH,CATD;;AAWA,eAAeZ,OAAO,CAClBD,gBADkB,EAElBR,OAAO,CAACuB,eAAD,EAAkB;AAACnB,EAAAA,gBAAD;AAAmBD,EAAAA,QAAnB;AAA6BF,EAAAA,UAA7B;AAAyCC,EAAAA;AAAzC,CAAlB,CAFW,CAAP,CAIdQ,UAJc,CAAf,C,CAOA;AACA;AACA;AAEA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {connect} from \"react-redux\";\nimport {deleteUser, followUsers, getUsers, toggleInProgress}\nfrom \"../../redux/usersReducer\";\nimport React from \"react\";\nimport UsersFunctional from \"./UsersFunctional\";\nimport Preloader from \"../common/preloader/preloader\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nclass UsersClass extends React.Component {\n    componentDidMount() {\n        this.props.getUsers(this.props.pageSize, this.props.currentPage);\n        // this.props.toggleIsFetching(true);\n        // UsersApi.getUsers(this.props.pageSize, this.props.currentPage)\n        //     .then(data => {\n        //         this.props.toggleIsFetching(false);\n        //         this.props.setUsers(data.items);\n        //         // this.props.setTotalUsersCount(response.data.totalCount);-\n        //     })\n    }\n    onPageChange = (pageNumber) => {\n        this.props.getUsers(this.props.pageSize, pageNumber);\n    }\n    render = () => {\n        return <>\n            { this.props.isFetching ? <Preloader /> : null }\n            <UsersFunctional totalUsersCount={this.props.totalUsersCount}\n                             pageSize={this.props.pageSize}\n                             currentPage={this.props.currentPage}\n                             onPageChange={this.onPageChange}\n                             users={this.props.users}\n                             followingInProgress={this.props.followingInProgress}\n                             deleteUser={this.props.deleteUser}\n                             followUsers={this.props.followUsers}/>\n            </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps, {toggleInProgress, getUsers, deleteUser, followUsers})\n)\n(UsersClass);\n\n\n// const UsersContainer = withAuthRedirect (\n//     connect(mapStateToProps, {toggleInProgress, getUsers, deleteUser, followUsers}) (UsersClass)\n// );\n\n// export default UsersContainer;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// let mapDispatchToProps = (dispatch) => {\n//     return {\n//         following: (userId) => {dispatch(followingAC(userId))},\n//         remove: (userId) => {dispatch(removeAC(userId))},\n//         setUsers: (users) => {dispatch(setUsersAC(users))},\n//         setCurrentPage: (pageNumber) => {dispatch(setCurrentPageAC(pageNumber))},\n//         setTotalUsersCount: (totalCount) => {dispatch(setTotalUsersCountAC(totalCount))},\n//         toggleIsFetching: (isFetching) => {dispatch(toggleIsFetchingAC(isFetching))}\n//     }\n// }\n// let AuthRedirectComponent = withAuthRedirect(UsersClass);\n"]},"metadata":{},"sourceType":"module"}