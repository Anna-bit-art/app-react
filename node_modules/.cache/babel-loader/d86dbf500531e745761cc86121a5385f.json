{"ast":null,"code":"import axios from \"axios\";\nimport freddie from \"../img/freddie2.jpeg\";\nconst users = axios.create({\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n  data: {},\n  withCredentials: true,\n  headers: {\n    'API-KEY': 'da71eae0-46cf-4f59-8d46-d01d15e90512'\n  }\n});\nexport const UsersApi = {\n  getUsers(pageSize, currentPage) {\n    return users.get(`users?count=${pageSize}&page=${currentPage}`).then(response => response.data);\n  },\n\n  followUser(userId) {\n    return users.post(`follow/${userId}`).then(response => response.data);\n  },\n\n  removeUser(userId) {\n    return users.delete(`follow/${userId}`).then(response => response.data);\n  },\n\n  profile(userId) {\n    console.warn('Obsolete method. Please use profileAPI object.');\n    return profileAPI.getProfile(userId);\n  }\n\n};\nexport const authAPI = {\n  me() {\n    return users.get('auth/me').then(response => response.data);\n  },\n\n  myPhoto() {\n    return users.put(`profile/photo`, {\n      image: freddie\n    });\n  }\n\n};\nexport const profileAPI = {\n  getProfile(userId) {\n    return users.get(`profile/${userId}`).then(response => response.data);\n  },\n\n  getStatus(userId) {\n    return users.get(`profile/status/${userId}`);\n  },\n\n  updateStatus(newStatus) {\n    return users.put(`profile/status`, {\n      status: newStatus\n    });\n  }\n\n}; // axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {withCredentials:true})\n//     .then(response => {\n//         if(response.data.resultCode === 0) {\n//             let {id, email, login} = response.data.data;\n//             this.props.setAuthUserData(id, email, login);\n//         }\n//     })\n// const follow = axios.create({\n//     baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n//     data:  {},\n//     withCredentials: true,\n//     headers:{\n//         'API-KEY': 'da71eae0-46cf-4f59-8d46-d01d15e90512'\n//     }\n// })\n//\n// export const UserFollow = {\n//     followUser(userId) {\n//         return follow.post(`follow/${userId}`)\n//             .then(response => response.data);\n//     },\n//     removeUser(userId) {\n//         return follow.delete(`follow/${userId}`)\n//             .then(response => response.data);\n//     }\n// }","map":{"version":3,"sources":["/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/api/api.js"],"names":["axios","freddie","users","create","baseURL","data","withCredentials","headers","UsersApi","getUsers","pageSize","currentPage","get","then","response","followUser","userId","post","removeUser","delete","profile","console","warn","profileAPI","getProfile","authAPI","me","myPhoto","put","image","getStatus","updateStatus","newStatus","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,MAAMC,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAG,+CADa;AAEvBC,EAAAA,IAAI,EAAG,EAFgB;AAGvBC,EAAAA,eAAe,EAAE,IAHM;AAIvBC,EAAAA,OAAO,EAAC;AACJ,eAAW;AADP;AAJe,CAAb,CAAd;AAQA,OAAO,MAAMC,QAAQ,GAAG;AACpBC,EAAAA,QAAQ,CAACC,QAAD,EAAWC,WAAX,EAAwB;AAC5B,WAAOT,KAAK,CAACU,GAAN,CAAW,eAAcF,QAAS,SAAQC,WAAY,EAAtD,EACFE,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACT,IADxB,CAAP;AAEH,GAJmB;;AAKpBU,EAAAA,UAAU,CAACC,MAAD,EAAS;AACf,WAAOd,KAAK,CAACe,IAAN,CAAY,UAASD,MAAO,EAA5B,EACFH,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACT,IADxB,CAAP;AAEH,GARmB;;AASpBa,EAAAA,UAAU,CAACF,MAAD,EAAS;AACf,WAAOd,KAAK,CAACiB,MAAN,CAAc,UAASH,MAAO,EAA9B,EACFH,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACT,IADxB,CAAP;AAEH,GAZmB;;AAapBe,EAAAA,OAAO,CAACJ,MAAD,EAAS;AACZK,IAAAA,OAAO,CAACC,IAAR,CAAa,gDAAb;AACA,WAAOC,UAAU,CAACC,UAAX,CAAsBR,MAAtB,CAAP;AACH;;AAhBmB,CAAjB;AAqBP,OAAO,MAAMS,OAAO,GAAG;AACnBC,EAAAA,EAAE,GAAG;AACD,WAAOxB,KAAK,CAACU,GAAN,CAAU,SAAV,EACFC,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACT,IADxB,CAAP;AAEH,GAJkB;;AAKnBsB,EAAAA,OAAO,GAAG;AACN,WAAOzB,KAAK,CAAC0B,GAAN,CAAW,eAAX,EAA2B;AAACC,MAAAA,KAAK,EAAE5B;AAAR,KAA3B,CAAP;AACH;;AAPkB,CAAhB;AAUP,OAAO,MAAMsB,UAAU,GAAG;AACtBC,EAAAA,UAAU,CAACR,MAAD,EAAS;AACf,WAAOd,KAAK,CAACU,GAAN,CAAW,WAAUI,MAAO,EAA5B,EACFH,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACT,IADxB,CAAP;AAEH,GAJqB;;AAKtByB,EAAAA,SAAS,CAACd,MAAD,EAAS;AACd,WAAOd,KAAK,CAACU,GAAN,CAAW,kBAAiBI,MAAO,EAAnC,CAAP;AACH,GAPqB;;AAQtBe,EAAAA,YAAY,CAACC,SAAD,EAAY;AACpB,WAAO9B,KAAK,CAAC0B,GAAN,CAAW,gBAAX,EAA4B;AAACK,MAAAA,MAAM,EAAED;AAAT,KAA5B,CAAP;AACH;;AAVqB,CAAnB,C,CAmBP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\nimport freddie from \"../img/freddie2.jpeg\";\n\nconst users = axios.create({\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n    data:  {},\n    withCredentials: true,\n    headers:{\n        'API-KEY': 'da71eae0-46cf-4f59-8d46-d01d15e90512'\n    }\n})\nexport const UsersApi = {\n    getUsers(pageSize, currentPage) {\n        return users.get(`users?count=${pageSize}&page=${currentPage}`)\n            .then(response => response.data)\n    },\n    followUser(userId) {\n        return users.post(`follow/${userId}`)\n            .then(response => response.data);\n    },\n    removeUser(userId) {\n        return users.delete(`follow/${userId}`)\n            .then(response => response.data)\n    },\n    profile(userId) {\n        console.warn('Obsolete method. Please use profileAPI object.')\n        return profileAPI.getProfile(userId)\n    },\n\n\n}\n\nexport const authAPI = {\n    me() {\n        return users.get('auth/me')\n            .then(response => response.data);\n    },\n    myPhoto() {\n        return users.put(`profile/photo`, {image: freddie})\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return users.get(`profile/${userId}`)\n            .then(response => response.data);\n    },\n    getStatus(userId) {\n        return users.get(`profile/status/${userId}`)\n    },\n    updateStatus(newStatus) {\n        return users.put(`profile/status`, {status: newStatus})\n    }\n}\n\n\n\n\n\n\n\n// axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {withCredentials:true})\n//     .then(response => {\n//         if(response.data.resultCode === 0) {\n//             let {id, email, login} = response.data.data;\n//             this.props.setAuthUserData(id, email, login);\n//         }\n//     })\n\n// const follow = axios.create({\n//     baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n//     data:  {},\n//     withCredentials: true,\n//     headers:{\n//         'API-KEY': 'da71eae0-46cf-4f59-8d46-d01d15e90512'\n//     }\n// })\n//\n// export const UserFollow = {\n//     followUser(userId) {\n//         return follow.post(`follow/${userId}`)\n//             .then(response => response.data);\n//     },\n//     removeUser(userId) {\n//         return follow.delete(`follow/${userId}`)\n//             .then(response => response.data);\n//     }\n// }\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}