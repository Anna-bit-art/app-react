{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nlet initialState = {\n  users: [// { id: 1, followed: true, fullName: 'David Bowie', status: 'Life looks like a play field', location: { city: 'London', country: 'US'} },\n    // { id: 2, followed: false, fullName: 'Queen', status: 'We are the champions', location: { city: 'London', country: 'US'} },\n    // { id: 3, followed: false, fullName: 'Kanye West', status: 'ye ', location: { city: 'Chicago', country: 'USA'} },\n    // { id: 4, followed: true, fullName: 'Jared Leto', status: 'Bartholomew Cubbins', location: { city: 'Louisiana', country: 'USA'} },\n  ]\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: [...state.users, ...action.users]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unFollowAC = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nexport default usersReducer;","map":{"version":3,"sources":["/Users/anna/Desktop/Work/WebstormProjects/react/my-app/src/components/redux/usersReducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","initialState","users","usersReducer","state","action","type","map","u","id","userId","followed","followAC","unFollowAC","setUsersAC"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AAEA,IAAIC,YAAY,GAAG;AACXC,EAAAA,KAAK,EAAE,CACH;AACA;AACA;AACA;AAJG;AADI,CAAnB;;AASA,MAAMC,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,MAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYK,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAGA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAAnB,EAA2B;AACvB,mBAAO,EAAC,GAAGF,CAAJ;AAAOG,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AACH,iBAAOH,CAAP;AACD,SALM;AAFJ,OAAP;;AASJ,SAAKT,QAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYK,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAGA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAAnB,EAA2B;AACvB,mBAAO,EAAC,GAAGF,CAAJ;AAAOG,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AACD,iBAAOH,CAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKR,SAAL;AAAgB;AACZ,eAAO,EAAE,GAAGI,KAAL;AAAYF,UAAAA,KAAK,EAAE,CAAE,GAAGE,KAAK,CAACF,KAAX,EAAkB,GAAGG,MAAM,CAACH,KAA5B;AAAnB,SAAP;AACH;;AACD;AAAS,aAAOE,KAAP;AAxBb;AA0BH,CA3BD;;AA6BA,OAAO,MAAMQ,QAAQ,GAAIF,MAAD,KAAa;AAACJ,EAAAA,IAAI,EAAER,MAAP;AAAeY,EAAAA;AAAf,CAAb,CAAjB;AACP,OAAO,MAAMG,UAAU,GAAIH,MAAD,KAAa;AAACJ,EAAAA,IAAI,EAAEP,QAAP;AAAiBW,EAAAA;AAAjB,CAAb,CAAnB;AACP,OAAO,MAAMI,UAAU,GAAIZ,KAAD,KAAY;AAACI,EAAAA,IAAI,EAAEN,SAAP;AAAkBE,EAAAA;AAAlB,CAAZ,CAAnB;AAEP,eAAeC,YAAf","sourcesContent":["const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\n\nlet initialState = {\n        users: [\n            // { id: 1, followed: true, fullName: 'David Bowie', status: 'Life looks like a play field', location: { city: 'London', country: 'US'} },\n            // { id: 2, followed: false, fullName: 'Queen', status: 'We are the champions', location: { city: 'London', country: 'US'} },\n            // { id: 3, followed: false, fullName: 'Kanye West', status: 'ye ', location: { city: 'Chicago', country: 'USA'} },\n            // { id: 4, followed: true, fullName: 'Jared Leto', status: 'Bartholomew Cubbins', location: { city: 'Louisiana', country: 'USA'} },\n        ],\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if(u.id === action.userId) {\n                        return {...u, followed: true};\n                    }\n                  return u\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if(u.id === action.userId) {\n                        return {...u, followed: false};\n                    }\n                    return u\n                })\n            }\n        case SET_USERS: {\n            return { ...state, users: [ ...state.users, ...action.users] }\n        }\n        default: return state;\n    }\n};\n\nexport const followAC = (userId) => ({type: FOLLOW, userId});\nexport const unFollowAC = (userId) => ({type: UNFOLLOW, userId});\nexport const setUsersAC = (users) => ({type: SET_USERS, users});\n\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}